/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the ThresholdRuleDefaultableFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThresholdRuleDefaultableFields{}

// ThresholdRuleDefaultableFields struct for ThresholdRuleDefaultableFields
type ThresholdRuleDefaultableFields struct {
	Language *KqlQueryLanguage `json:"language,omitempty"`
}

// NewThresholdRuleDefaultableFields instantiates a new ThresholdRuleDefaultableFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThresholdRuleDefaultableFields() *ThresholdRuleDefaultableFields {
	this := ThresholdRuleDefaultableFields{}
	return &this
}

// NewThresholdRuleDefaultableFieldsWithDefaults instantiates a new ThresholdRuleDefaultableFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThresholdRuleDefaultableFieldsWithDefaults() *ThresholdRuleDefaultableFields {
	this := ThresholdRuleDefaultableFields{}
	return &this
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *ThresholdRuleDefaultableFields) GetLanguage() KqlQueryLanguage {
	if o == nil || IsNil(o.Language) {
		var ret KqlQueryLanguage
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRuleDefaultableFields) GetLanguageOk() (*KqlQueryLanguage, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *ThresholdRuleDefaultableFields) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given KqlQueryLanguage and assigns it to the Language field.
func (o *ThresholdRuleDefaultableFields) SetLanguage(v KqlQueryLanguage) {
	o.Language = &v
}

func (o ThresholdRuleDefaultableFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThresholdRuleDefaultableFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	return toSerialize, nil
}

type NullableThresholdRuleDefaultableFields struct {
	value *ThresholdRuleDefaultableFields
	isSet bool
}

func (v NullableThresholdRuleDefaultableFields) Get() *ThresholdRuleDefaultableFields {
	return v.value
}

func (v *NullableThresholdRuleDefaultableFields) Set(val *ThresholdRuleDefaultableFields) {
	v.value = val
	v.isSet = true
}

func (v NullableThresholdRuleDefaultableFields) IsSet() bool {
	return v.isSet
}

func (v *NullableThresholdRuleDefaultableFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThresholdRuleDefaultableFields(val *ThresholdRuleDefaultableFields) *NullableThresholdRuleDefaultableFields {
	return &NullableThresholdRuleDefaultableFields{value: val, isSet: true}
}

func (v NullableThresholdRuleDefaultableFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThresholdRuleDefaultableFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
