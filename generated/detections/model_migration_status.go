/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
	"time"
)

// checks if the MigrationStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MigrationStatus{}

// MigrationStatus struct for MigrationStatus
type MigrationStatus struct {
	// A string that is not empty and does not contain only whitespace
	Id      string    `json:"id"`
	Status  string    `json:"status"`
	Updated time.Time `json:"updated"`
	Version int32     `json:"version"`
}

// NewMigrationStatus instantiates a new MigrationStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMigrationStatus(id string, status string, updated time.Time, version int32) *MigrationStatus {
	this := MigrationStatus{}
	this.Id = id
	this.Status = status
	this.Updated = updated
	this.Version = version
	return &this
}

// NewMigrationStatusWithDefaults instantiates a new MigrationStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMigrationStatusWithDefaults() *MigrationStatus {
	this := MigrationStatus{}
	return &this
}

// GetId returns the Id field value
func (o *MigrationStatus) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MigrationStatus) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MigrationStatus) SetId(v string) {
	o.Id = v
}

// GetStatus returns the Status field value
func (o *MigrationStatus) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *MigrationStatus) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *MigrationStatus) SetStatus(v string) {
	o.Status = v
}

// GetUpdated returns the Updated field value
func (o *MigrationStatus) GetUpdated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value
// and a boolean to check if the value has been set.
func (o *MigrationStatus) GetUpdatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Updated, true
}

// SetUpdated sets field value
func (o *MigrationStatus) SetUpdated(v time.Time) {
	o.Updated = v
}

// GetVersion returns the Version field value
func (o *MigrationStatus) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *MigrationStatus) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *MigrationStatus) SetVersion(v int32) {
	o.Version = v
}

func (o MigrationStatus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MigrationStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["status"] = o.Status
	toSerialize["updated"] = o.Updated
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

type NullableMigrationStatus struct {
	value *MigrationStatus
	isSet bool
}

func (v NullableMigrationStatus) Get() *MigrationStatus {
	return v.value
}

func (v *NullableMigrationStatus) Set(val *MigrationStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMigrationStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMigrationStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMigrationStatus(val *MigrationStatus) *NullableMigrationStatus {
	return &NullableMigrationStatus{value: val, isSet: true}
}

func (v NullableMigrationStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMigrationStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
