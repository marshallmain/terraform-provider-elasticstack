/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the IndexMigrationStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndexMigrationStatus{}

// IndexMigrationStatus struct for IndexMigrationStatus
type IndexMigrationStatus struct {
	// A string that is not empty and does not contain only whitespace
	Index          string            `json:"index"`
	IsOutdated     bool              `json:"is_outdated"`
	Migrations     []MigrationStatus `json:"migrations"`
	SignalVersions []AlertVersion    `json:"signal_versions"`
	Version        int32             `json:"version"`
}

// NewIndexMigrationStatus instantiates a new IndexMigrationStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndexMigrationStatus(index string, isOutdated bool, migrations []MigrationStatus, signalVersions []AlertVersion, version int32) *IndexMigrationStatus {
	this := IndexMigrationStatus{}
	this.Index = index
	this.IsOutdated = isOutdated
	this.Migrations = migrations
	this.SignalVersions = signalVersions
	this.Version = version
	return &this
}

// NewIndexMigrationStatusWithDefaults instantiates a new IndexMigrationStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndexMigrationStatusWithDefaults() *IndexMigrationStatus {
	this := IndexMigrationStatus{}
	return &this
}

// GetIndex returns the Index field value
func (o *IndexMigrationStatus) GetIndex() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *IndexMigrationStatus) GetIndexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Index, true
}

// SetIndex sets field value
func (o *IndexMigrationStatus) SetIndex(v string) {
	o.Index = v
}

// GetIsOutdated returns the IsOutdated field value
func (o *IndexMigrationStatus) GetIsOutdated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsOutdated
}

// GetIsOutdatedOk returns a tuple with the IsOutdated field value
// and a boolean to check if the value has been set.
func (o *IndexMigrationStatus) GetIsOutdatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsOutdated, true
}

// SetIsOutdated sets field value
func (o *IndexMigrationStatus) SetIsOutdated(v bool) {
	o.IsOutdated = v
}

// GetMigrations returns the Migrations field value
func (o *IndexMigrationStatus) GetMigrations() []MigrationStatus {
	if o == nil {
		var ret []MigrationStatus
		return ret
	}

	return o.Migrations
}

// GetMigrationsOk returns a tuple with the Migrations field value
// and a boolean to check if the value has been set.
func (o *IndexMigrationStatus) GetMigrationsOk() ([]MigrationStatus, bool) {
	if o == nil {
		return nil, false
	}
	return o.Migrations, true
}

// SetMigrations sets field value
func (o *IndexMigrationStatus) SetMigrations(v []MigrationStatus) {
	o.Migrations = v
}

// GetSignalVersions returns the SignalVersions field value
func (o *IndexMigrationStatus) GetSignalVersions() []AlertVersion {
	if o == nil {
		var ret []AlertVersion
		return ret
	}

	return o.SignalVersions
}

// GetSignalVersionsOk returns a tuple with the SignalVersions field value
// and a boolean to check if the value has been set.
func (o *IndexMigrationStatus) GetSignalVersionsOk() ([]AlertVersion, bool) {
	if o == nil {
		return nil, false
	}
	return o.SignalVersions, true
}

// SetSignalVersions sets field value
func (o *IndexMigrationStatus) SetSignalVersions(v []AlertVersion) {
	o.SignalVersions = v
}

// GetVersion returns the Version field value
func (o *IndexMigrationStatus) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *IndexMigrationStatus) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *IndexMigrationStatus) SetVersion(v int32) {
	o.Version = v
}

func (o IndexMigrationStatus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndexMigrationStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["index"] = o.Index
	toSerialize["is_outdated"] = o.IsOutdated
	toSerialize["migrations"] = o.Migrations
	toSerialize["signal_versions"] = o.SignalVersions
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

type NullableIndexMigrationStatus struct {
	value *IndexMigrationStatus
	isSet bool
}

func (v NullableIndexMigrationStatus) Get() *IndexMigrationStatus {
	return v.value
}

func (v *NullableIndexMigrationStatus) Set(val *IndexMigrationStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableIndexMigrationStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableIndexMigrationStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndexMigrationStatus(val *IndexMigrationStatus) *NullableIndexMigrationStatus {
	return &NullableIndexMigrationStatus{value: val, isSet: true}
}

func (v NullableIndexMigrationStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndexMigrationStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
