/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the SavedQueryRuleOptionalFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SavedQueryRuleOptionalFields{}

// SavedQueryRuleOptionalFields struct for SavedQueryRuleOptionalFields
type SavedQueryRuleOptionalFields struct {
	AlertSuppression *AlertSuppression `json:"alert_suppression,omitempty"`
	DataViewId       *string           `json:"data_view_id,omitempty"`
	Filters          []interface{}     `json:"filters,omitempty"`
	Index            []string          `json:"index,omitempty"`
	Query            *string           `json:"query,omitempty"`
	ResponseActions  []ResponseAction  `json:"response_actions,omitempty"`
}

// NewSavedQueryRuleOptionalFields instantiates a new SavedQueryRuleOptionalFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSavedQueryRuleOptionalFields() *SavedQueryRuleOptionalFields {
	this := SavedQueryRuleOptionalFields{}
	return &this
}

// NewSavedQueryRuleOptionalFieldsWithDefaults instantiates a new SavedQueryRuleOptionalFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSavedQueryRuleOptionalFieldsWithDefaults() *SavedQueryRuleOptionalFields {
	this := SavedQueryRuleOptionalFields{}
	return &this
}

// GetAlertSuppression returns the AlertSuppression field value if set, zero value otherwise.
func (o *SavedQueryRuleOptionalFields) GetAlertSuppression() AlertSuppression {
	if o == nil || IsNil(o.AlertSuppression) {
		var ret AlertSuppression
		return ret
	}
	return *o.AlertSuppression
}

// GetAlertSuppressionOk returns a tuple with the AlertSuppression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SavedQueryRuleOptionalFields) GetAlertSuppressionOk() (*AlertSuppression, bool) {
	if o == nil || IsNil(o.AlertSuppression) {
		return nil, false
	}
	return o.AlertSuppression, true
}

// HasAlertSuppression returns a boolean if a field has been set.
func (o *SavedQueryRuleOptionalFields) HasAlertSuppression() bool {
	if o != nil && !IsNil(o.AlertSuppression) {
		return true
	}

	return false
}

// SetAlertSuppression gets a reference to the given AlertSuppression and assigns it to the AlertSuppression field.
func (o *SavedQueryRuleOptionalFields) SetAlertSuppression(v AlertSuppression) {
	o.AlertSuppression = &v
}

// GetDataViewId returns the DataViewId field value if set, zero value otherwise.
func (o *SavedQueryRuleOptionalFields) GetDataViewId() string {
	if o == nil || IsNil(o.DataViewId) {
		var ret string
		return ret
	}
	return *o.DataViewId
}

// GetDataViewIdOk returns a tuple with the DataViewId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SavedQueryRuleOptionalFields) GetDataViewIdOk() (*string, bool) {
	if o == nil || IsNil(o.DataViewId) {
		return nil, false
	}
	return o.DataViewId, true
}

// HasDataViewId returns a boolean if a field has been set.
func (o *SavedQueryRuleOptionalFields) HasDataViewId() bool {
	if o != nil && !IsNil(o.DataViewId) {
		return true
	}

	return false
}

// SetDataViewId gets a reference to the given string and assigns it to the DataViewId field.
func (o *SavedQueryRuleOptionalFields) SetDataViewId(v string) {
	o.DataViewId = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *SavedQueryRuleOptionalFields) GetFilters() []interface{} {
	if o == nil || IsNil(o.Filters) {
		var ret []interface{}
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SavedQueryRuleOptionalFields) GetFiltersOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *SavedQueryRuleOptionalFields) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []interface{} and assigns it to the Filters field.
func (o *SavedQueryRuleOptionalFields) SetFilters(v []interface{}) {
	o.Filters = v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *SavedQueryRuleOptionalFields) GetIndex() []string {
	if o == nil || IsNil(o.Index) {
		var ret []string
		return ret
	}
	return o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SavedQueryRuleOptionalFields) GetIndexOk() ([]string, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *SavedQueryRuleOptionalFields) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given []string and assigns it to the Index field.
func (o *SavedQueryRuleOptionalFields) SetIndex(v []string) {
	o.Index = v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *SavedQueryRuleOptionalFields) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SavedQueryRuleOptionalFields) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *SavedQueryRuleOptionalFields) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *SavedQueryRuleOptionalFields) SetQuery(v string) {
	o.Query = &v
}

// GetResponseActions returns the ResponseActions field value if set, zero value otherwise.
func (o *SavedQueryRuleOptionalFields) GetResponseActions() []ResponseAction {
	if o == nil || IsNil(o.ResponseActions) {
		var ret []ResponseAction
		return ret
	}
	return o.ResponseActions
}

// GetResponseActionsOk returns a tuple with the ResponseActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SavedQueryRuleOptionalFields) GetResponseActionsOk() ([]ResponseAction, bool) {
	if o == nil || IsNil(o.ResponseActions) {
		return nil, false
	}
	return o.ResponseActions, true
}

// HasResponseActions returns a boolean if a field has been set.
func (o *SavedQueryRuleOptionalFields) HasResponseActions() bool {
	if o != nil && !IsNil(o.ResponseActions) {
		return true
	}

	return false
}

// SetResponseActions gets a reference to the given []ResponseAction and assigns it to the ResponseActions field.
func (o *SavedQueryRuleOptionalFields) SetResponseActions(v []ResponseAction) {
	o.ResponseActions = v
}

func (o SavedQueryRuleOptionalFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SavedQueryRuleOptionalFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertSuppression) {
		toSerialize["alert_suppression"] = o.AlertSuppression
	}
	if !IsNil(o.DataViewId) {
		toSerialize["data_view_id"] = o.DataViewId
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if !IsNil(o.ResponseActions) {
		toSerialize["response_actions"] = o.ResponseActions
	}
	return toSerialize, nil
}

type NullableSavedQueryRuleOptionalFields struct {
	value *SavedQueryRuleOptionalFields
	isSet bool
}

func (v NullableSavedQueryRuleOptionalFields) Get() *SavedQueryRuleOptionalFields {
	return v.value
}

func (v *NullableSavedQueryRuleOptionalFields) Set(val *SavedQueryRuleOptionalFields) {
	v.value = val
	v.isSet = true
}

func (v NullableSavedQueryRuleOptionalFields) IsSet() bool {
	return v.isSet
}

func (v *NullableSavedQueryRuleOptionalFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSavedQueryRuleOptionalFields(val *SavedQueryRuleOptionalFields) *NullableSavedQueryRuleOptionalFields {
	return &NullableSavedQueryRuleOptionalFields{value: val, isSet: true}
}

func (v NullableSavedQueryRuleOptionalFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSavedQueryRuleOptionalFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
