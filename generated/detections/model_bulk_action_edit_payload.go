/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
	"fmt"
)

// BulkActionEditPayload struct for BulkActionEditPayload
type BulkActionEditPayload struct {
	BulkActionEditPayloadIndexPatterns       *BulkActionEditPayloadIndexPatterns
	BulkActionEditPayloadInvestigationFields *BulkActionEditPayloadInvestigationFields
	BulkActionEditPayloadRuleActions         *BulkActionEditPayloadRuleActions
	BulkActionEditPayloadSchedule            *BulkActionEditPayloadSchedule
	BulkActionEditPayloadTags                *BulkActionEditPayloadTags
	BulkActionEditPayloadTimeline            *BulkActionEditPayloadTimeline
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *BulkActionEditPayload) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into BulkActionEditPayloadIndexPatterns
	err = json.Unmarshal(data, &dst.BulkActionEditPayloadIndexPatterns)
	if err == nil {
		jsonBulkActionEditPayloadIndexPatterns, _ := json.Marshal(dst.BulkActionEditPayloadIndexPatterns)
		if string(jsonBulkActionEditPayloadIndexPatterns) == "{}" { // empty struct
			dst.BulkActionEditPayloadIndexPatterns = nil
		} else {
			return nil // data stored in dst.BulkActionEditPayloadIndexPatterns, return on the first match
		}
	} else {
		dst.BulkActionEditPayloadIndexPatterns = nil
	}

	// try to unmarshal JSON data into BulkActionEditPayloadInvestigationFields
	err = json.Unmarshal(data, &dst.BulkActionEditPayloadInvestigationFields)
	if err == nil {
		jsonBulkActionEditPayloadInvestigationFields, _ := json.Marshal(dst.BulkActionEditPayloadInvestigationFields)
		if string(jsonBulkActionEditPayloadInvestigationFields) == "{}" { // empty struct
			dst.BulkActionEditPayloadInvestigationFields = nil
		} else {
			return nil // data stored in dst.BulkActionEditPayloadInvestigationFields, return on the first match
		}
	} else {
		dst.BulkActionEditPayloadInvestigationFields = nil
	}

	// try to unmarshal JSON data into BulkActionEditPayloadRuleActions
	err = json.Unmarshal(data, &dst.BulkActionEditPayloadRuleActions)
	if err == nil {
		jsonBulkActionEditPayloadRuleActions, _ := json.Marshal(dst.BulkActionEditPayloadRuleActions)
		if string(jsonBulkActionEditPayloadRuleActions) == "{}" { // empty struct
			dst.BulkActionEditPayloadRuleActions = nil
		} else {
			return nil // data stored in dst.BulkActionEditPayloadRuleActions, return on the first match
		}
	} else {
		dst.BulkActionEditPayloadRuleActions = nil
	}

	// try to unmarshal JSON data into BulkActionEditPayloadSchedule
	err = json.Unmarshal(data, &dst.BulkActionEditPayloadSchedule)
	if err == nil {
		jsonBulkActionEditPayloadSchedule, _ := json.Marshal(dst.BulkActionEditPayloadSchedule)
		if string(jsonBulkActionEditPayloadSchedule) == "{}" { // empty struct
			dst.BulkActionEditPayloadSchedule = nil
		} else {
			return nil // data stored in dst.BulkActionEditPayloadSchedule, return on the first match
		}
	} else {
		dst.BulkActionEditPayloadSchedule = nil
	}

	// try to unmarshal JSON data into BulkActionEditPayloadTags
	err = json.Unmarshal(data, &dst.BulkActionEditPayloadTags)
	if err == nil {
		jsonBulkActionEditPayloadTags, _ := json.Marshal(dst.BulkActionEditPayloadTags)
		if string(jsonBulkActionEditPayloadTags) == "{}" { // empty struct
			dst.BulkActionEditPayloadTags = nil
		} else {
			return nil // data stored in dst.BulkActionEditPayloadTags, return on the first match
		}
	} else {
		dst.BulkActionEditPayloadTags = nil
	}

	// try to unmarshal JSON data into BulkActionEditPayloadTimeline
	err = json.Unmarshal(data, &dst.BulkActionEditPayloadTimeline)
	if err == nil {
		jsonBulkActionEditPayloadTimeline, _ := json.Marshal(dst.BulkActionEditPayloadTimeline)
		if string(jsonBulkActionEditPayloadTimeline) == "{}" { // empty struct
			dst.BulkActionEditPayloadTimeline = nil
		} else {
			return nil // data stored in dst.BulkActionEditPayloadTimeline, return on the first match
		}
	} else {
		dst.BulkActionEditPayloadTimeline = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(BulkActionEditPayload)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *BulkActionEditPayload) MarshalJSON() ([]byte, error) {
	if src.BulkActionEditPayloadIndexPatterns != nil {
		return json.Marshal(&src.BulkActionEditPayloadIndexPatterns)
	}

	if src.BulkActionEditPayloadInvestigationFields != nil {
		return json.Marshal(&src.BulkActionEditPayloadInvestigationFields)
	}

	if src.BulkActionEditPayloadRuleActions != nil {
		return json.Marshal(&src.BulkActionEditPayloadRuleActions)
	}

	if src.BulkActionEditPayloadSchedule != nil {
		return json.Marshal(&src.BulkActionEditPayloadSchedule)
	}

	if src.BulkActionEditPayloadTags != nil {
		return json.Marshal(&src.BulkActionEditPayloadTags)
	}

	if src.BulkActionEditPayloadTimeline != nil {
		return json.Marshal(&src.BulkActionEditPayloadTimeline)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableBulkActionEditPayload struct {
	value *BulkActionEditPayload
	isSet bool
}

func (v NullableBulkActionEditPayload) Get() *BulkActionEditPayload {
	return v.value
}

func (v *NullableBulkActionEditPayload) Set(val *BulkActionEditPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkActionEditPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkActionEditPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkActionEditPayload(val *BulkActionEditPayload) *NullableBulkActionEditPayload {
	return &NullableBulkActionEditPayload{value: val, isSet: true}
}

func (v NullableBulkActionEditPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkActionEditPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
