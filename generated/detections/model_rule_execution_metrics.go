/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the RuleExecutionMetrics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RuleExecutionMetrics{}

// RuleExecutionMetrics struct for RuleExecutionMetrics
type RuleExecutionMetrics struct {
	// Duration in seconds of execution gap
	ExecutionGapDurationS *int32 `json:"execution_gap_duration_s,omitempty"`
	// Total time spent enriching documents during current rule execution cycle
	TotalEnrichmentDurationMs *int32 `json:"total_enrichment_duration_ms,omitempty"`
	// Total time spent indexing documents during current rule execution cycle
	TotalIndexingDurationMs *int32 `json:"total_indexing_duration_ms,omitempty"`
	// Total time spent performing ES searches as measured by Kibana; includes network latency and time spent serializing/deserializing request/response
	TotalSearchDurationMs *int32 `json:"total_search_duration_ms,omitempty"`
}

// NewRuleExecutionMetrics instantiates a new RuleExecutionMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuleExecutionMetrics() *RuleExecutionMetrics {
	this := RuleExecutionMetrics{}
	return &this
}

// NewRuleExecutionMetricsWithDefaults instantiates a new RuleExecutionMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuleExecutionMetricsWithDefaults() *RuleExecutionMetrics {
	this := RuleExecutionMetrics{}
	return &this
}

// GetExecutionGapDurationS returns the ExecutionGapDurationS field value if set, zero value otherwise.
func (o *RuleExecutionMetrics) GetExecutionGapDurationS() int32 {
	if o == nil || IsNil(o.ExecutionGapDurationS) {
		var ret int32
		return ret
	}
	return *o.ExecutionGapDurationS
}

// GetExecutionGapDurationSOk returns a tuple with the ExecutionGapDurationS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleExecutionMetrics) GetExecutionGapDurationSOk() (*int32, bool) {
	if o == nil || IsNil(o.ExecutionGapDurationS) {
		return nil, false
	}
	return o.ExecutionGapDurationS, true
}

// HasExecutionGapDurationS returns a boolean if a field has been set.
func (o *RuleExecutionMetrics) HasExecutionGapDurationS() bool {
	if o != nil && !IsNil(o.ExecutionGapDurationS) {
		return true
	}

	return false
}

// SetExecutionGapDurationS gets a reference to the given int32 and assigns it to the ExecutionGapDurationS field.
func (o *RuleExecutionMetrics) SetExecutionGapDurationS(v int32) {
	o.ExecutionGapDurationS = &v
}

// GetTotalEnrichmentDurationMs returns the TotalEnrichmentDurationMs field value if set, zero value otherwise.
func (o *RuleExecutionMetrics) GetTotalEnrichmentDurationMs() int32 {
	if o == nil || IsNil(o.TotalEnrichmentDurationMs) {
		var ret int32
		return ret
	}
	return *o.TotalEnrichmentDurationMs
}

// GetTotalEnrichmentDurationMsOk returns a tuple with the TotalEnrichmentDurationMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleExecutionMetrics) GetTotalEnrichmentDurationMsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalEnrichmentDurationMs) {
		return nil, false
	}
	return o.TotalEnrichmentDurationMs, true
}

// HasTotalEnrichmentDurationMs returns a boolean if a field has been set.
func (o *RuleExecutionMetrics) HasTotalEnrichmentDurationMs() bool {
	if o != nil && !IsNil(o.TotalEnrichmentDurationMs) {
		return true
	}

	return false
}

// SetTotalEnrichmentDurationMs gets a reference to the given int32 and assigns it to the TotalEnrichmentDurationMs field.
func (o *RuleExecutionMetrics) SetTotalEnrichmentDurationMs(v int32) {
	o.TotalEnrichmentDurationMs = &v
}

// GetTotalIndexingDurationMs returns the TotalIndexingDurationMs field value if set, zero value otherwise.
func (o *RuleExecutionMetrics) GetTotalIndexingDurationMs() int32 {
	if o == nil || IsNil(o.TotalIndexingDurationMs) {
		var ret int32
		return ret
	}
	return *o.TotalIndexingDurationMs
}

// GetTotalIndexingDurationMsOk returns a tuple with the TotalIndexingDurationMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleExecutionMetrics) GetTotalIndexingDurationMsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalIndexingDurationMs) {
		return nil, false
	}
	return o.TotalIndexingDurationMs, true
}

// HasTotalIndexingDurationMs returns a boolean if a field has been set.
func (o *RuleExecutionMetrics) HasTotalIndexingDurationMs() bool {
	if o != nil && !IsNil(o.TotalIndexingDurationMs) {
		return true
	}

	return false
}

// SetTotalIndexingDurationMs gets a reference to the given int32 and assigns it to the TotalIndexingDurationMs field.
func (o *RuleExecutionMetrics) SetTotalIndexingDurationMs(v int32) {
	o.TotalIndexingDurationMs = &v
}

// GetTotalSearchDurationMs returns the TotalSearchDurationMs field value if set, zero value otherwise.
func (o *RuleExecutionMetrics) GetTotalSearchDurationMs() int32 {
	if o == nil || IsNil(o.TotalSearchDurationMs) {
		var ret int32
		return ret
	}
	return *o.TotalSearchDurationMs
}

// GetTotalSearchDurationMsOk returns a tuple with the TotalSearchDurationMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleExecutionMetrics) GetTotalSearchDurationMsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalSearchDurationMs) {
		return nil, false
	}
	return o.TotalSearchDurationMs, true
}

// HasTotalSearchDurationMs returns a boolean if a field has been set.
func (o *RuleExecutionMetrics) HasTotalSearchDurationMs() bool {
	if o != nil && !IsNil(o.TotalSearchDurationMs) {
		return true
	}

	return false
}

// SetTotalSearchDurationMs gets a reference to the given int32 and assigns it to the TotalSearchDurationMs field.
func (o *RuleExecutionMetrics) SetTotalSearchDurationMs(v int32) {
	o.TotalSearchDurationMs = &v
}

func (o RuleExecutionMetrics) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RuleExecutionMetrics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExecutionGapDurationS) {
		toSerialize["execution_gap_duration_s"] = o.ExecutionGapDurationS
	}
	if !IsNil(o.TotalEnrichmentDurationMs) {
		toSerialize["total_enrichment_duration_ms"] = o.TotalEnrichmentDurationMs
	}
	if !IsNil(o.TotalIndexingDurationMs) {
		toSerialize["total_indexing_duration_ms"] = o.TotalIndexingDurationMs
	}
	if !IsNil(o.TotalSearchDurationMs) {
		toSerialize["total_search_duration_ms"] = o.TotalSearchDurationMs
	}
	return toSerialize, nil
}

type NullableRuleExecutionMetrics struct {
	value *RuleExecutionMetrics
	isSet bool
}

func (v NullableRuleExecutionMetrics) Get() *RuleExecutionMetrics {
	return v.value
}

func (v *NullableRuleExecutionMetrics) Set(val *RuleExecutionMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleExecutionMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleExecutionMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleExecutionMetrics(val *RuleExecutionMetrics) *NullableRuleExecutionMetrics {
	return &NullableRuleExecutionMetrics{value: val, isSet: true}
}

func (v NullableRuleExecutionMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleExecutionMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
