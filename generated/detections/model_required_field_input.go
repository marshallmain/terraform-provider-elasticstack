/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the RequiredFieldInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequiredFieldInput{}

// RequiredFieldInput Input parameters to create a RequiredField. Does not include the `ecs` field, because `ecs` is calculated on the backend based on the field name and type.
type RequiredFieldInput struct {
	// A string that is not empty and does not contain only whitespace
	Name string `json:"name"`
	// A string that is not empty and does not contain only whitespace
	Type string `json:"type"`
}

// NewRequiredFieldInput instantiates a new RequiredFieldInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequiredFieldInput(name string, type_ string) *RequiredFieldInput {
	this := RequiredFieldInput{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewRequiredFieldInputWithDefaults instantiates a new RequiredFieldInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequiredFieldInputWithDefaults() *RequiredFieldInput {
	this := RequiredFieldInput{}
	return &this
}

// GetName returns the Name field value
func (o *RequiredFieldInput) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RequiredFieldInput) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RequiredFieldInput) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *RequiredFieldInput) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RequiredFieldInput) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RequiredFieldInput) SetType(v string) {
	o.Type = v
}

func (o RequiredFieldInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequiredFieldInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableRequiredFieldInput struct {
	value *RequiredFieldInput
	isSet bool
}

func (v NullableRequiredFieldInput) Get() *RequiredFieldInput {
	return v.value
}

func (v *NullableRequiredFieldInput) Set(val *RequiredFieldInput) {
	v.value = val
	v.isSet = true
}

func (v NullableRequiredFieldInput) IsSet() bool {
	return v.isSet
}

func (v *NullableRequiredFieldInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequiredFieldInput(val *RequiredFieldInput) *NullableRequiredFieldInput {
	return &NullableRequiredFieldInput{value: val, isSet: true}
}

func (v NullableRequiredFieldInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequiredFieldInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
