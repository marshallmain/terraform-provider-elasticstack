/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the NormalizedRuleError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NormalizedRuleError{}

// NormalizedRuleError struct for NormalizedRuleError
type NormalizedRuleError struct {
	ErrCode    *BulkActionsDryRunErrCode `json:"err_code,omitempty"`
	Message    string                    `json:"message"`
	Rules      []RuleDetailsInError      `json:"rules"`
	StatusCode int32                     `json:"status_code"`
}

// NewNormalizedRuleError instantiates a new NormalizedRuleError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNormalizedRuleError(message string, rules []RuleDetailsInError, statusCode int32) *NormalizedRuleError {
	this := NormalizedRuleError{}
	this.Message = message
	this.Rules = rules
	this.StatusCode = statusCode
	return &this
}

// NewNormalizedRuleErrorWithDefaults instantiates a new NormalizedRuleError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNormalizedRuleErrorWithDefaults() *NormalizedRuleError {
	this := NormalizedRuleError{}
	return &this
}

// GetErrCode returns the ErrCode field value if set, zero value otherwise.
func (o *NormalizedRuleError) GetErrCode() BulkActionsDryRunErrCode {
	if o == nil || IsNil(o.ErrCode) {
		var ret BulkActionsDryRunErrCode
		return ret
	}
	return *o.ErrCode
}

// GetErrCodeOk returns a tuple with the ErrCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NormalizedRuleError) GetErrCodeOk() (*BulkActionsDryRunErrCode, bool) {
	if o == nil || IsNil(o.ErrCode) {
		return nil, false
	}
	return o.ErrCode, true
}

// HasErrCode returns a boolean if a field has been set.
func (o *NormalizedRuleError) HasErrCode() bool {
	if o != nil && !IsNil(o.ErrCode) {
		return true
	}

	return false
}

// SetErrCode gets a reference to the given BulkActionsDryRunErrCode and assigns it to the ErrCode field.
func (o *NormalizedRuleError) SetErrCode(v BulkActionsDryRunErrCode) {
	o.ErrCode = &v
}

// GetMessage returns the Message field value
func (o *NormalizedRuleError) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *NormalizedRuleError) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *NormalizedRuleError) SetMessage(v string) {
	o.Message = v
}

// GetRules returns the Rules field value
func (o *NormalizedRuleError) GetRules() []RuleDetailsInError {
	if o == nil {
		var ret []RuleDetailsInError
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *NormalizedRuleError) GetRulesOk() ([]RuleDetailsInError, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rules, true
}

// SetRules sets field value
func (o *NormalizedRuleError) SetRules(v []RuleDetailsInError) {
	o.Rules = v
}

// GetStatusCode returns the StatusCode field value
func (o *NormalizedRuleError) GetStatusCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value
// and a boolean to check if the value has been set.
func (o *NormalizedRuleError) GetStatusCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusCode, true
}

// SetStatusCode sets field value
func (o *NormalizedRuleError) SetStatusCode(v int32) {
	o.StatusCode = v
}

func (o NormalizedRuleError) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NormalizedRuleError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrCode) {
		toSerialize["err_code"] = o.ErrCode
	}
	toSerialize["message"] = o.Message
	toSerialize["rules"] = o.Rules
	toSerialize["status_code"] = o.StatusCode
	return toSerialize, nil
}

type NullableNormalizedRuleError struct {
	value *NormalizedRuleError
	isSet bool
}

func (v NullableNormalizedRuleError) Get() *NormalizedRuleError {
	return v.value
}

func (v *NullableNormalizedRuleError) Set(val *NormalizedRuleError) {
	v.value = val
	v.isSet = true
}

func (v NullableNormalizedRuleError) IsSet() bool {
	return v.isSet
}

func (v *NullableNormalizedRuleError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNormalizedRuleError(val *NormalizedRuleError) *NullableNormalizedRuleError {
	return &NullableNormalizedRuleError{value: val, isSet: true}
}

func (v NullableNormalizedRuleError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNormalizedRuleError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
