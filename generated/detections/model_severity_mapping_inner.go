/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the SeverityMappingInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SeverityMappingInner{}

// SeverityMappingInner struct for SeverityMappingInner
type SeverityMappingInner struct {
	Field    string   `json:"field"`
	Operator string   `json:"operator"`
	Severity Severity `json:"severity"`
	Value    string   `json:"value"`
}

// NewSeverityMappingInner instantiates a new SeverityMappingInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeverityMappingInner(field string, operator string, severity Severity, value string) *SeverityMappingInner {
	this := SeverityMappingInner{}
	this.Field = field
	this.Operator = operator
	this.Severity = severity
	this.Value = value
	return &this
}

// NewSeverityMappingInnerWithDefaults instantiates a new SeverityMappingInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeverityMappingInnerWithDefaults() *SeverityMappingInner {
	this := SeverityMappingInner{}
	return &this
}

// GetField returns the Field field value
func (o *SeverityMappingInner) GetField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *SeverityMappingInner) GetFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *SeverityMappingInner) SetField(v string) {
	o.Field = v
}

// GetOperator returns the Operator field value
func (o *SeverityMappingInner) GetOperator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *SeverityMappingInner) GetOperatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *SeverityMappingInner) SetOperator(v string) {
	o.Operator = v
}

// GetSeverity returns the Severity field value
func (o *SeverityMappingInner) GetSeverity() Severity {
	if o == nil {
		var ret Severity
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *SeverityMappingInner) GetSeverityOk() (*Severity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *SeverityMappingInner) SetSeverity(v Severity) {
	o.Severity = v
}

// GetValue returns the Value field value
func (o *SeverityMappingInner) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SeverityMappingInner) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SeverityMappingInner) SetValue(v string) {
	o.Value = v
}

func (o SeverityMappingInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SeverityMappingInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["field"] = o.Field
	toSerialize["operator"] = o.Operator
	toSerialize["severity"] = o.Severity
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableSeverityMappingInner struct {
	value *SeverityMappingInner
	isSet bool
}

func (v NullableSeverityMappingInner) Get() *SeverityMappingInner {
	return v.value
}

func (v *NullableSeverityMappingInner) Set(val *SeverityMappingInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSeverityMappingInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSeverityMappingInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeverityMappingInner(val *SeverityMappingInner) *NullableSeverityMappingInner {
	return &NullableSeverityMappingInner{value: val, isSet: true}
}

func (v NullableSeverityMappingInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeverityMappingInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
