/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the EsqlRuleOptionalFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EsqlRuleOptionalFields{}

// EsqlRuleOptionalFields struct for EsqlRuleOptionalFields
type EsqlRuleOptionalFields struct {
	AlertSuppression *AlertSuppression `json:"alert_suppression,omitempty"`
	ResponseActions  []ResponseAction  `json:"response_actions,omitempty"`
}

// NewEsqlRuleOptionalFields instantiates a new EsqlRuleOptionalFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEsqlRuleOptionalFields() *EsqlRuleOptionalFields {
	this := EsqlRuleOptionalFields{}
	return &this
}

// NewEsqlRuleOptionalFieldsWithDefaults instantiates a new EsqlRuleOptionalFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEsqlRuleOptionalFieldsWithDefaults() *EsqlRuleOptionalFields {
	this := EsqlRuleOptionalFields{}
	return &this
}

// GetAlertSuppression returns the AlertSuppression field value if set, zero value otherwise.
func (o *EsqlRuleOptionalFields) GetAlertSuppression() AlertSuppression {
	if o == nil || IsNil(o.AlertSuppression) {
		var ret AlertSuppression
		return ret
	}
	return *o.AlertSuppression
}

// GetAlertSuppressionOk returns a tuple with the AlertSuppression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsqlRuleOptionalFields) GetAlertSuppressionOk() (*AlertSuppression, bool) {
	if o == nil || IsNil(o.AlertSuppression) {
		return nil, false
	}
	return o.AlertSuppression, true
}

// HasAlertSuppression returns a boolean if a field has been set.
func (o *EsqlRuleOptionalFields) HasAlertSuppression() bool {
	if o != nil && !IsNil(o.AlertSuppression) {
		return true
	}

	return false
}

// SetAlertSuppression gets a reference to the given AlertSuppression and assigns it to the AlertSuppression field.
func (o *EsqlRuleOptionalFields) SetAlertSuppression(v AlertSuppression) {
	o.AlertSuppression = &v
}

// GetResponseActions returns the ResponseActions field value if set, zero value otherwise.
func (o *EsqlRuleOptionalFields) GetResponseActions() []ResponseAction {
	if o == nil || IsNil(o.ResponseActions) {
		var ret []ResponseAction
		return ret
	}
	return o.ResponseActions
}

// GetResponseActionsOk returns a tuple with the ResponseActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EsqlRuleOptionalFields) GetResponseActionsOk() ([]ResponseAction, bool) {
	if o == nil || IsNil(o.ResponseActions) {
		return nil, false
	}
	return o.ResponseActions, true
}

// HasResponseActions returns a boolean if a field has been set.
func (o *EsqlRuleOptionalFields) HasResponseActions() bool {
	if o != nil && !IsNil(o.ResponseActions) {
		return true
	}

	return false
}

// SetResponseActions gets a reference to the given []ResponseAction and assigns it to the ResponseActions field.
func (o *EsqlRuleOptionalFields) SetResponseActions(v []ResponseAction) {
	o.ResponseActions = v
}

func (o EsqlRuleOptionalFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EsqlRuleOptionalFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertSuppression) {
		toSerialize["alert_suppression"] = o.AlertSuppression
	}
	if !IsNil(o.ResponseActions) {
		toSerialize["response_actions"] = o.ResponseActions
	}
	return toSerialize, nil
}

type NullableEsqlRuleOptionalFields struct {
	value *EsqlRuleOptionalFields
	isSet bool
}

func (v NullableEsqlRuleOptionalFields) Get() *EsqlRuleOptionalFields {
	return v.value
}

func (v *NullableEsqlRuleOptionalFields) Set(val *EsqlRuleOptionalFields) {
	v.value = val
	v.isSet = true
}

func (v NullableEsqlRuleOptionalFields) IsSet() bool {
	return v.isSet
}

func (v *NullableEsqlRuleOptionalFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEsqlRuleOptionalFields(val *EsqlRuleOptionalFields) *NullableEsqlRuleOptionalFields {
	return &NullableEsqlRuleOptionalFields{value: val, isSet: true}
}

func (v NullableEsqlRuleOptionalFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEsqlRuleOptionalFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
