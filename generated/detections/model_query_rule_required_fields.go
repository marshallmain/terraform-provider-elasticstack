/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the QueryRuleRequiredFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryRuleRequiredFields{}

// QueryRuleRequiredFields struct for QueryRuleRequiredFields
type QueryRuleRequiredFields struct {
	// Rule type
	Type string `json:"type"`
}

// NewQueryRuleRequiredFields instantiates a new QueryRuleRequiredFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryRuleRequiredFields(type_ string) *QueryRuleRequiredFields {
	this := QueryRuleRequiredFields{}
	this.Type = type_
	return &this
}

// NewQueryRuleRequiredFieldsWithDefaults instantiates a new QueryRuleRequiredFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryRuleRequiredFieldsWithDefaults() *QueryRuleRequiredFields {
	this := QueryRuleRequiredFields{}
	return &this
}

// GetType returns the Type field value
func (o *QueryRuleRequiredFields) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *QueryRuleRequiredFields) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *QueryRuleRequiredFields) SetType(v string) {
	o.Type = v
}

func (o QueryRuleRequiredFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryRuleRequiredFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableQueryRuleRequiredFields struct {
	value *QueryRuleRequiredFields
	isSet bool
}

func (v NullableQueryRuleRequiredFields) Get() *QueryRuleRequiredFields {
	return v.value
}

func (v *NullableQueryRuleRequiredFields) Set(val *QueryRuleRequiredFields) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryRuleRequiredFields) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryRuleRequiredFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryRuleRequiredFields(val *QueryRuleRequiredFields) *NullableQueryRuleRequiredFields {
	return &NullableQueryRuleRequiredFields{value: val, isSet: true}
}

func (v NullableQueryRuleRequiredFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryRuleRequiredFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
