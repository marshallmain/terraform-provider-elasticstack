/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the MachineLearningRulePatchProps type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineLearningRulePatchProps{}

// MachineLearningRulePatchProps struct for MachineLearningRulePatchProps
type MachineLearningRulePatchProps struct {
	// Anomaly threshold
	AnomalyThreshold     *int32                `json:"anomaly_threshold,omitempty"`
	MachineLearningJobId *MachineLearningJobId `json:"machine_learning_job_id,omitempty"`
	// Rule type
	Type             *string                         `json:"type,omitempty"`
	AlertSuppression *AlertSuppression               `json:"alert_suppression,omitempty"`
	Actions          []RuleAction                    `json:"actions,omitempty"`
	AliasPurpose     *SavedObjectResolveAliasPurpose `json:"alias_purpose,omitempty"`
	AliasTargetId    *string                         `json:"alias_target_id,omitempty"`
	Author           []string                        `json:"author,omitempty"`
	// Determines if the rule acts as a building block. By default, building-block alerts are not displayed in the UI. These rules are used as a foundation for other rules that do generate alerts. Its value must be default.
	BuildingBlockType *string `json:"building_block_type,omitempty"`
	Description       *string `json:"description,omitempty"`
	// Determines whether the rule is enabled.
	Enabled        *bool               `json:"enabled,omitempty"`
	ExceptionsList []RuleExceptionList `json:"exceptions_list,omitempty"`
	FalsePositives []string            `json:"false_positives,omitempty"`
	// Time from which data is analyzed each time the rule runs, using a date math range. For example, now-4200s means the rule analyzes data from 70 minutes before its start time. Defaults to now-6m (analyzes data from 6 minutes before the start time).
	From *string `json:"from,omitempty"`
	// A universally unique identifier
	Id *string `json:"id,omitempty"`
	// Frequency of rule execution, using a date math range. For example, \"1h\" means the rule runs every hour. Defaults to 5m (5 minutes).
	Interval            *string              `json:"interval,omitempty"`
	InvestigationFields *InvestigationFields `json:"investigation_fields,omitempty"`
	// The rule's license.
	License    *string                `json:"license,omitempty"`
	MaxSignals *int32                 `json:"max_signals,omitempty"`
	Meta       map[string]interface{} `json:"meta,omitempty"`
	Name       *string                `json:"name,omitempty"`
	// Has no effect.
	Namespace *string `json:"namespace,omitempty"`
	// Notes to help investigate alerts produced by the rule.
	Note    *string                    `json:"note,omitempty"`
	Outcome *SavedObjectResolveOutcome `json:"outcome,omitempty"`
	// (deprecated) Has no effect.
	// Deprecated
	OutputIndex         *string              `json:"output_index,omitempty"`
	References          []string             `json:"references,omitempty"`
	RelatedIntegrations []RelatedIntegration `json:"related_integrations,omitempty"`
	RequiredFields      []RequiredFieldInput `json:"required_fields,omitempty"`
	// Risk score (0 to 100)
	RiskScore *int32 `json:"risk_score,omitempty"`
	// Overrides generated alerts' risk_score with a value from the source event
	RiskScoreMapping []RiskScoreMappingInner `json:"risk_score_mapping,omitempty"`
	// Could be any string, not necessarily a UUID
	RuleId *string `json:"rule_id,omitempty"`
	// Sets the source field for the alert's signal.rule.name value
	RuleNameOverride *string   `json:"rule_name_override,omitempty"`
	Setup            *string   `json:"setup,omitempty"`
	Severity         *Severity `json:"severity,omitempty"`
	// Overrides generated alerts' severity with values from the source event
	SeverityMapping []SeverityMappingInner `json:"severity_mapping,omitempty"`
	// String array containing words and phrases to help categorize, filter, and search rules. Defaults to an empty array.
	Tags     []string            `json:"tags,omitempty"`
	Threat   []Threat            `json:"threat,omitempty"`
	Throttle *RuleActionThrottle `json:"throttle,omitempty"`
	// Timeline template ID
	TimelineId *string `json:"timeline_id,omitempty"`
	// Timeline template title
	TimelineTitle *string `json:"timeline_title,omitempty"`
	// Sets the time field used to query indices
	TimestampOverride *string `json:"timestamp_override,omitempty"`
	// Disables the fallback to the event's @timestamp field
	TimestampOverrideFallbackDisabled *bool   `json:"timestamp_override_fallback_disabled,omitempty"`
	To                                *string `json:"to,omitempty"`
	// The rule's version number.
	Version *int32 `json:"version,omitempty"`
}

// NewMachineLearningRulePatchProps instantiates a new MachineLearningRulePatchProps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineLearningRulePatchProps() *MachineLearningRulePatchProps {
	this := MachineLearningRulePatchProps{}
	return &this
}

// NewMachineLearningRulePatchPropsWithDefaults instantiates a new MachineLearningRulePatchProps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineLearningRulePatchPropsWithDefaults() *MachineLearningRulePatchProps {
	this := MachineLearningRulePatchProps{}
	return &this
}

// GetAnomalyThreshold returns the AnomalyThreshold field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetAnomalyThreshold() int32 {
	if o == nil || IsNil(o.AnomalyThreshold) {
		var ret int32
		return ret
	}
	return *o.AnomalyThreshold
}

// GetAnomalyThresholdOk returns a tuple with the AnomalyThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetAnomalyThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.AnomalyThreshold) {
		return nil, false
	}
	return o.AnomalyThreshold, true
}

// HasAnomalyThreshold returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasAnomalyThreshold() bool {
	if o != nil && !IsNil(o.AnomalyThreshold) {
		return true
	}

	return false
}

// SetAnomalyThreshold gets a reference to the given int32 and assigns it to the AnomalyThreshold field.
func (o *MachineLearningRulePatchProps) SetAnomalyThreshold(v int32) {
	o.AnomalyThreshold = &v
}

// GetMachineLearningJobId returns the MachineLearningJobId field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetMachineLearningJobId() MachineLearningJobId {
	if o == nil || IsNil(o.MachineLearningJobId) {
		var ret MachineLearningJobId
		return ret
	}
	return *o.MachineLearningJobId
}

// GetMachineLearningJobIdOk returns a tuple with the MachineLearningJobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetMachineLearningJobIdOk() (*MachineLearningJobId, bool) {
	if o == nil || IsNil(o.MachineLearningJobId) {
		return nil, false
	}
	return o.MachineLearningJobId, true
}

// HasMachineLearningJobId returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasMachineLearningJobId() bool {
	if o != nil && !IsNil(o.MachineLearningJobId) {
		return true
	}

	return false
}

// SetMachineLearningJobId gets a reference to the given MachineLearningJobId and assigns it to the MachineLearningJobId field.
func (o *MachineLearningRulePatchProps) SetMachineLearningJobId(v MachineLearningJobId) {
	o.MachineLearningJobId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MachineLearningRulePatchProps) SetType(v string) {
	o.Type = &v
}

// GetAlertSuppression returns the AlertSuppression field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetAlertSuppression() AlertSuppression {
	if o == nil || IsNil(o.AlertSuppression) {
		var ret AlertSuppression
		return ret
	}
	return *o.AlertSuppression
}

// GetAlertSuppressionOk returns a tuple with the AlertSuppression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetAlertSuppressionOk() (*AlertSuppression, bool) {
	if o == nil || IsNil(o.AlertSuppression) {
		return nil, false
	}
	return o.AlertSuppression, true
}

// HasAlertSuppression returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasAlertSuppression() bool {
	if o != nil && !IsNil(o.AlertSuppression) {
		return true
	}

	return false
}

// SetAlertSuppression gets a reference to the given AlertSuppression and assigns it to the AlertSuppression field.
func (o *MachineLearningRulePatchProps) SetAlertSuppression(v AlertSuppression) {
	o.AlertSuppression = &v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetActions() []RuleAction {
	if o == nil || IsNil(o.Actions) {
		var ret []RuleAction
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetActionsOk() ([]RuleAction, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given []RuleAction and assigns it to the Actions field.
func (o *MachineLearningRulePatchProps) SetActions(v []RuleAction) {
	o.Actions = v
}

// GetAliasPurpose returns the AliasPurpose field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetAliasPurpose() SavedObjectResolveAliasPurpose {
	if o == nil || IsNil(o.AliasPurpose) {
		var ret SavedObjectResolveAliasPurpose
		return ret
	}
	return *o.AliasPurpose
}

// GetAliasPurposeOk returns a tuple with the AliasPurpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetAliasPurposeOk() (*SavedObjectResolveAliasPurpose, bool) {
	if o == nil || IsNil(o.AliasPurpose) {
		return nil, false
	}
	return o.AliasPurpose, true
}

// HasAliasPurpose returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasAliasPurpose() bool {
	if o != nil && !IsNil(o.AliasPurpose) {
		return true
	}

	return false
}

// SetAliasPurpose gets a reference to the given SavedObjectResolveAliasPurpose and assigns it to the AliasPurpose field.
func (o *MachineLearningRulePatchProps) SetAliasPurpose(v SavedObjectResolveAliasPurpose) {
	o.AliasPurpose = &v
}

// GetAliasTargetId returns the AliasTargetId field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetAliasTargetId() string {
	if o == nil || IsNil(o.AliasTargetId) {
		var ret string
		return ret
	}
	return *o.AliasTargetId
}

// GetAliasTargetIdOk returns a tuple with the AliasTargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetAliasTargetIdOk() (*string, bool) {
	if o == nil || IsNil(o.AliasTargetId) {
		return nil, false
	}
	return o.AliasTargetId, true
}

// HasAliasTargetId returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasAliasTargetId() bool {
	if o != nil && !IsNil(o.AliasTargetId) {
		return true
	}

	return false
}

// SetAliasTargetId gets a reference to the given string and assigns it to the AliasTargetId field.
func (o *MachineLearningRulePatchProps) SetAliasTargetId(v string) {
	o.AliasTargetId = &v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetAuthor() []string {
	if o == nil || IsNil(o.Author) {
		var ret []string
		return ret
	}
	return o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetAuthorOk() ([]string, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given []string and assigns it to the Author field.
func (o *MachineLearningRulePatchProps) SetAuthor(v []string) {
	o.Author = v
}

// GetBuildingBlockType returns the BuildingBlockType field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetBuildingBlockType() string {
	if o == nil || IsNil(o.BuildingBlockType) {
		var ret string
		return ret
	}
	return *o.BuildingBlockType
}

// GetBuildingBlockTypeOk returns a tuple with the BuildingBlockType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetBuildingBlockTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BuildingBlockType) {
		return nil, false
	}
	return o.BuildingBlockType, true
}

// HasBuildingBlockType returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasBuildingBlockType() bool {
	if o != nil && !IsNil(o.BuildingBlockType) {
		return true
	}

	return false
}

// SetBuildingBlockType gets a reference to the given string and assigns it to the BuildingBlockType field.
func (o *MachineLearningRulePatchProps) SetBuildingBlockType(v string) {
	o.BuildingBlockType = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MachineLearningRulePatchProps) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *MachineLearningRulePatchProps) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetExceptionsList returns the ExceptionsList field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetExceptionsList() []RuleExceptionList {
	if o == nil || IsNil(o.ExceptionsList) {
		var ret []RuleExceptionList
		return ret
	}
	return o.ExceptionsList
}

// GetExceptionsListOk returns a tuple with the ExceptionsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetExceptionsListOk() ([]RuleExceptionList, bool) {
	if o == nil || IsNil(o.ExceptionsList) {
		return nil, false
	}
	return o.ExceptionsList, true
}

// HasExceptionsList returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasExceptionsList() bool {
	if o != nil && !IsNil(o.ExceptionsList) {
		return true
	}

	return false
}

// SetExceptionsList gets a reference to the given []RuleExceptionList and assigns it to the ExceptionsList field.
func (o *MachineLearningRulePatchProps) SetExceptionsList(v []RuleExceptionList) {
	o.ExceptionsList = v
}

// GetFalsePositives returns the FalsePositives field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetFalsePositives() []string {
	if o == nil || IsNil(o.FalsePositives) {
		var ret []string
		return ret
	}
	return o.FalsePositives
}

// GetFalsePositivesOk returns a tuple with the FalsePositives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetFalsePositivesOk() ([]string, bool) {
	if o == nil || IsNil(o.FalsePositives) {
		return nil, false
	}
	return o.FalsePositives, true
}

// HasFalsePositives returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasFalsePositives() bool {
	if o != nil && !IsNil(o.FalsePositives) {
		return true
	}

	return false
}

// SetFalsePositives gets a reference to the given []string and assigns it to the FalsePositives field.
func (o *MachineLearningRulePatchProps) SetFalsePositives(v []string) {
	o.FalsePositives = v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *MachineLearningRulePatchProps) SetFrom(v string) {
	o.From = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MachineLearningRulePatchProps) SetId(v string) {
	o.Id = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetInterval() string {
	if o == nil || IsNil(o.Interval) {
		var ret string
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given string and assigns it to the Interval field.
func (o *MachineLearningRulePatchProps) SetInterval(v string) {
	o.Interval = &v
}

// GetInvestigationFields returns the InvestigationFields field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetInvestigationFields() InvestigationFields {
	if o == nil || IsNil(o.InvestigationFields) {
		var ret InvestigationFields
		return ret
	}
	return *o.InvestigationFields
}

// GetInvestigationFieldsOk returns a tuple with the InvestigationFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetInvestigationFieldsOk() (*InvestigationFields, bool) {
	if o == nil || IsNil(o.InvestigationFields) {
		return nil, false
	}
	return o.InvestigationFields, true
}

// HasInvestigationFields returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasInvestigationFields() bool {
	if o != nil && !IsNil(o.InvestigationFields) {
		return true
	}

	return false
}

// SetInvestigationFields gets a reference to the given InvestigationFields and assigns it to the InvestigationFields field.
func (o *MachineLearningRulePatchProps) SetInvestigationFields(v InvestigationFields) {
	o.InvestigationFields = &v
}

// GetLicense returns the License field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetLicense() string {
	if o == nil || IsNil(o.License) {
		var ret string
		return ret
	}
	return *o.License
}

// GetLicenseOk returns a tuple with the License field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetLicenseOk() (*string, bool) {
	if o == nil || IsNil(o.License) {
		return nil, false
	}
	return o.License, true
}

// HasLicense returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasLicense() bool {
	if o != nil && !IsNil(o.License) {
		return true
	}

	return false
}

// SetLicense gets a reference to the given string and assigns it to the License field.
func (o *MachineLearningRulePatchProps) SetLicense(v string) {
	o.License = &v
}

// GetMaxSignals returns the MaxSignals field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetMaxSignals() int32 {
	if o == nil || IsNil(o.MaxSignals) {
		var ret int32
		return ret
	}
	return *o.MaxSignals
}

// GetMaxSignalsOk returns a tuple with the MaxSignals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetMaxSignalsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxSignals) {
		return nil, false
	}
	return o.MaxSignals, true
}

// HasMaxSignals returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasMaxSignals() bool {
	if o != nil && !IsNil(o.MaxSignals) {
		return true
	}

	return false
}

// SetMaxSignals gets a reference to the given int32 and assigns it to the MaxSignals field.
func (o *MachineLearningRulePatchProps) SetMaxSignals(v int32) {
	o.MaxSignals = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetMeta() map[string]interface{} {
	if o == nil || IsNil(o.Meta) {
		var ret map[string]interface{}
		return ret
	}
	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetMetaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Meta) {
		return map[string]interface{}{}, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given map[string]interface{} and assigns it to the Meta field.
func (o *MachineLearningRulePatchProps) SetMeta(v map[string]interface{}) {
	o.Meta = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MachineLearningRulePatchProps) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *MachineLearningRulePatchProps) SetNamespace(v string) {
	o.Namespace = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *MachineLearningRulePatchProps) SetNote(v string) {
	o.Note = &v
}

// GetOutcome returns the Outcome field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetOutcome() SavedObjectResolveOutcome {
	if o == nil || IsNil(o.Outcome) {
		var ret SavedObjectResolveOutcome
		return ret
	}
	return *o.Outcome
}

// GetOutcomeOk returns a tuple with the Outcome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetOutcomeOk() (*SavedObjectResolveOutcome, bool) {
	if o == nil || IsNil(o.Outcome) {
		return nil, false
	}
	return o.Outcome, true
}

// HasOutcome returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasOutcome() bool {
	if o != nil && !IsNil(o.Outcome) {
		return true
	}

	return false
}

// SetOutcome gets a reference to the given SavedObjectResolveOutcome and assigns it to the Outcome field.
func (o *MachineLearningRulePatchProps) SetOutcome(v SavedObjectResolveOutcome) {
	o.Outcome = &v
}

// GetOutputIndex returns the OutputIndex field value if set, zero value otherwise.
// Deprecated
func (o *MachineLearningRulePatchProps) GetOutputIndex() string {
	if o == nil || IsNil(o.OutputIndex) {
		var ret string
		return ret
	}
	return *o.OutputIndex
}

// GetOutputIndexOk returns a tuple with the OutputIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *MachineLearningRulePatchProps) GetOutputIndexOk() (*string, bool) {
	if o == nil || IsNil(o.OutputIndex) {
		return nil, false
	}
	return o.OutputIndex, true
}

// HasOutputIndex returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasOutputIndex() bool {
	if o != nil && !IsNil(o.OutputIndex) {
		return true
	}

	return false
}

// SetOutputIndex gets a reference to the given string and assigns it to the OutputIndex field.
// Deprecated
func (o *MachineLearningRulePatchProps) SetOutputIndex(v string) {
	o.OutputIndex = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetReferences() []string {
	if o == nil || IsNil(o.References) {
		var ret []string
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []string and assigns it to the References field.
func (o *MachineLearningRulePatchProps) SetReferences(v []string) {
	o.References = v
}

// GetRelatedIntegrations returns the RelatedIntegrations field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetRelatedIntegrations() []RelatedIntegration {
	if o == nil || IsNil(o.RelatedIntegrations) {
		var ret []RelatedIntegration
		return ret
	}
	return o.RelatedIntegrations
}

// GetRelatedIntegrationsOk returns a tuple with the RelatedIntegrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetRelatedIntegrationsOk() ([]RelatedIntegration, bool) {
	if o == nil || IsNil(o.RelatedIntegrations) {
		return nil, false
	}
	return o.RelatedIntegrations, true
}

// HasRelatedIntegrations returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasRelatedIntegrations() bool {
	if o != nil && !IsNil(o.RelatedIntegrations) {
		return true
	}

	return false
}

// SetRelatedIntegrations gets a reference to the given []RelatedIntegration and assigns it to the RelatedIntegrations field.
func (o *MachineLearningRulePatchProps) SetRelatedIntegrations(v []RelatedIntegration) {
	o.RelatedIntegrations = v
}

// GetRequiredFields returns the RequiredFields field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetRequiredFields() []RequiredFieldInput {
	if o == nil || IsNil(o.RequiredFields) {
		var ret []RequiredFieldInput
		return ret
	}
	return o.RequiredFields
}

// GetRequiredFieldsOk returns a tuple with the RequiredFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetRequiredFieldsOk() ([]RequiredFieldInput, bool) {
	if o == nil || IsNil(o.RequiredFields) {
		return nil, false
	}
	return o.RequiredFields, true
}

// HasRequiredFields returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasRequiredFields() bool {
	if o != nil && !IsNil(o.RequiredFields) {
		return true
	}

	return false
}

// SetRequiredFields gets a reference to the given []RequiredFieldInput and assigns it to the RequiredFields field.
func (o *MachineLearningRulePatchProps) SetRequiredFields(v []RequiredFieldInput) {
	o.RequiredFields = v
}

// GetRiskScore returns the RiskScore field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetRiskScore() int32 {
	if o == nil || IsNil(o.RiskScore) {
		var ret int32
		return ret
	}
	return *o.RiskScore
}

// GetRiskScoreOk returns a tuple with the RiskScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetRiskScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.RiskScore) {
		return nil, false
	}
	return o.RiskScore, true
}

// HasRiskScore returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasRiskScore() bool {
	if o != nil && !IsNil(o.RiskScore) {
		return true
	}

	return false
}

// SetRiskScore gets a reference to the given int32 and assigns it to the RiskScore field.
func (o *MachineLearningRulePatchProps) SetRiskScore(v int32) {
	o.RiskScore = &v
}

// GetRiskScoreMapping returns the RiskScoreMapping field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetRiskScoreMapping() []RiskScoreMappingInner {
	if o == nil || IsNil(o.RiskScoreMapping) {
		var ret []RiskScoreMappingInner
		return ret
	}
	return o.RiskScoreMapping
}

// GetRiskScoreMappingOk returns a tuple with the RiskScoreMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetRiskScoreMappingOk() ([]RiskScoreMappingInner, bool) {
	if o == nil || IsNil(o.RiskScoreMapping) {
		return nil, false
	}
	return o.RiskScoreMapping, true
}

// HasRiskScoreMapping returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasRiskScoreMapping() bool {
	if o != nil && !IsNil(o.RiskScoreMapping) {
		return true
	}

	return false
}

// SetRiskScoreMapping gets a reference to the given []RiskScoreMappingInner and assigns it to the RiskScoreMapping field.
func (o *MachineLearningRulePatchProps) SetRiskScoreMapping(v []RiskScoreMappingInner) {
	o.RiskScoreMapping = v
}

// GetRuleId returns the RuleId field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetRuleId() string {
	if o == nil || IsNil(o.RuleId) {
		var ret string
		return ret
	}
	return *o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetRuleIdOk() (*string, bool) {
	if o == nil || IsNil(o.RuleId) {
		return nil, false
	}
	return o.RuleId, true
}

// HasRuleId returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasRuleId() bool {
	if o != nil && !IsNil(o.RuleId) {
		return true
	}

	return false
}

// SetRuleId gets a reference to the given string and assigns it to the RuleId field.
func (o *MachineLearningRulePatchProps) SetRuleId(v string) {
	o.RuleId = &v
}

// GetRuleNameOverride returns the RuleNameOverride field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetRuleNameOverride() string {
	if o == nil || IsNil(o.RuleNameOverride) {
		var ret string
		return ret
	}
	return *o.RuleNameOverride
}

// GetRuleNameOverrideOk returns a tuple with the RuleNameOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetRuleNameOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.RuleNameOverride) {
		return nil, false
	}
	return o.RuleNameOverride, true
}

// HasRuleNameOverride returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasRuleNameOverride() bool {
	if o != nil && !IsNil(o.RuleNameOverride) {
		return true
	}

	return false
}

// SetRuleNameOverride gets a reference to the given string and assigns it to the RuleNameOverride field.
func (o *MachineLearningRulePatchProps) SetRuleNameOverride(v string) {
	o.RuleNameOverride = &v
}

// GetSetup returns the Setup field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetSetup() string {
	if o == nil || IsNil(o.Setup) {
		var ret string
		return ret
	}
	return *o.Setup
}

// GetSetupOk returns a tuple with the Setup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetSetupOk() (*string, bool) {
	if o == nil || IsNil(o.Setup) {
		return nil, false
	}
	return o.Setup, true
}

// HasSetup returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasSetup() bool {
	if o != nil && !IsNil(o.Setup) {
		return true
	}

	return false
}

// SetSetup gets a reference to the given string and assigns it to the Setup field.
func (o *MachineLearningRulePatchProps) SetSetup(v string) {
	o.Setup = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetSeverity() Severity {
	if o == nil || IsNil(o.Severity) {
		var ret Severity
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetSeverityOk() (*Severity, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given Severity and assigns it to the Severity field.
func (o *MachineLearningRulePatchProps) SetSeverity(v Severity) {
	o.Severity = &v
}

// GetSeverityMapping returns the SeverityMapping field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetSeverityMapping() []SeverityMappingInner {
	if o == nil || IsNil(o.SeverityMapping) {
		var ret []SeverityMappingInner
		return ret
	}
	return o.SeverityMapping
}

// GetSeverityMappingOk returns a tuple with the SeverityMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetSeverityMappingOk() ([]SeverityMappingInner, bool) {
	if o == nil || IsNil(o.SeverityMapping) {
		return nil, false
	}
	return o.SeverityMapping, true
}

// HasSeverityMapping returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasSeverityMapping() bool {
	if o != nil && !IsNil(o.SeverityMapping) {
		return true
	}

	return false
}

// SetSeverityMapping gets a reference to the given []SeverityMappingInner and assigns it to the SeverityMapping field.
func (o *MachineLearningRulePatchProps) SetSeverityMapping(v []SeverityMappingInner) {
	o.SeverityMapping = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *MachineLearningRulePatchProps) SetTags(v []string) {
	o.Tags = v
}

// GetThreat returns the Threat field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetThreat() []Threat {
	if o == nil || IsNil(o.Threat) {
		var ret []Threat
		return ret
	}
	return o.Threat
}

// GetThreatOk returns a tuple with the Threat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetThreatOk() ([]Threat, bool) {
	if o == nil || IsNil(o.Threat) {
		return nil, false
	}
	return o.Threat, true
}

// HasThreat returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasThreat() bool {
	if o != nil && !IsNil(o.Threat) {
		return true
	}

	return false
}

// SetThreat gets a reference to the given []Threat and assigns it to the Threat field.
func (o *MachineLearningRulePatchProps) SetThreat(v []Threat) {
	o.Threat = v
}

// GetThrottle returns the Throttle field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetThrottle() RuleActionThrottle {
	if o == nil || IsNil(o.Throttle) {
		var ret RuleActionThrottle
		return ret
	}
	return *o.Throttle
}

// GetThrottleOk returns a tuple with the Throttle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetThrottleOk() (*RuleActionThrottle, bool) {
	if o == nil || IsNil(o.Throttle) {
		return nil, false
	}
	return o.Throttle, true
}

// HasThrottle returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasThrottle() bool {
	if o != nil && !IsNil(o.Throttle) {
		return true
	}

	return false
}

// SetThrottle gets a reference to the given RuleActionThrottle and assigns it to the Throttle field.
func (o *MachineLearningRulePatchProps) SetThrottle(v RuleActionThrottle) {
	o.Throttle = &v
}

// GetTimelineId returns the TimelineId field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetTimelineId() string {
	if o == nil || IsNil(o.TimelineId) {
		var ret string
		return ret
	}
	return *o.TimelineId
}

// GetTimelineIdOk returns a tuple with the TimelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetTimelineIdOk() (*string, bool) {
	if o == nil || IsNil(o.TimelineId) {
		return nil, false
	}
	return o.TimelineId, true
}

// HasTimelineId returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasTimelineId() bool {
	if o != nil && !IsNil(o.TimelineId) {
		return true
	}

	return false
}

// SetTimelineId gets a reference to the given string and assigns it to the TimelineId field.
func (o *MachineLearningRulePatchProps) SetTimelineId(v string) {
	o.TimelineId = &v
}

// GetTimelineTitle returns the TimelineTitle field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetTimelineTitle() string {
	if o == nil || IsNil(o.TimelineTitle) {
		var ret string
		return ret
	}
	return *o.TimelineTitle
}

// GetTimelineTitleOk returns a tuple with the TimelineTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetTimelineTitleOk() (*string, bool) {
	if o == nil || IsNil(o.TimelineTitle) {
		return nil, false
	}
	return o.TimelineTitle, true
}

// HasTimelineTitle returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasTimelineTitle() bool {
	if o != nil && !IsNil(o.TimelineTitle) {
		return true
	}

	return false
}

// SetTimelineTitle gets a reference to the given string and assigns it to the TimelineTitle field.
func (o *MachineLearningRulePatchProps) SetTimelineTitle(v string) {
	o.TimelineTitle = &v
}

// GetTimestampOverride returns the TimestampOverride field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetTimestampOverride() string {
	if o == nil || IsNil(o.TimestampOverride) {
		var ret string
		return ret
	}
	return *o.TimestampOverride
}

// GetTimestampOverrideOk returns a tuple with the TimestampOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetTimestampOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.TimestampOverride) {
		return nil, false
	}
	return o.TimestampOverride, true
}

// HasTimestampOverride returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasTimestampOverride() bool {
	if o != nil && !IsNil(o.TimestampOverride) {
		return true
	}

	return false
}

// SetTimestampOverride gets a reference to the given string and assigns it to the TimestampOverride field.
func (o *MachineLearningRulePatchProps) SetTimestampOverride(v string) {
	o.TimestampOverride = &v
}

// GetTimestampOverrideFallbackDisabled returns the TimestampOverrideFallbackDisabled field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetTimestampOverrideFallbackDisabled() bool {
	if o == nil || IsNil(o.TimestampOverrideFallbackDisabled) {
		var ret bool
		return ret
	}
	return *o.TimestampOverrideFallbackDisabled
}

// GetTimestampOverrideFallbackDisabledOk returns a tuple with the TimestampOverrideFallbackDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetTimestampOverrideFallbackDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.TimestampOverrideFallbackDisabled) {
		return nil, false
	}
	return o.TimestampOverrideFallbackDisabled, true
}

// HasTimestampOverrideFallbackDisabled returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasTimestampOverrideFallbackDisabled() bool {
	if o != nil && !IsNil(o.TimestampOverrideFallbackDisabled) {
		return true
	}

	return false
}

// SetTimestampOverrideFallbackDisabled gets a reference to the given bool and assigns it to the TimestampOverrideFallbackDisabled field.
func (o *MachineLearningRulePatchProps) SetTimestampOverrideFallbackDisabled(v bool) {
	o.TimestampOverrideFallbackDisabled = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetTo() string {
	if o == nil || IsNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetToOk() (*string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *MachineLearningRulePatchProps) SetTo(v string) {
	o.To = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *MachineLearningRulePatchProps) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineLearningRulePatchProps) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *MachineLearningRulePatchProps) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *MachineLearningRulePatchProps) SetVersion(v int32) {
	o.Version = &v
}

func (o MachineLearningRulePatchProps) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MachineLearningRulePatchProps) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnomalyThreshold) {
		toSerialize["anomaly_threshold"] = o.AnomalyThreshold
	}
	if !IsNil(o.MachineLearningJobId) {
		toSerialize["machine_learning_job_id"] = o.MachineLearningJobId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.AlertSuppression) {
		toSerialize["alert_suppression"] = o.AlertSuppression
	}
	if !IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	if !IsNil(o.AliasPurpose) {
		toSerialize["alias_purpose"] = o.AliasPurpose
	}
	if !IsNil(o.AliasTargetId) {
		toSerialize["alias_target_id"] = o.AliasTargetId
	}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.BuildingBlockType) {
		toSerialize["building_block_type"] = o.BuildingBlockType
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.ExceptionsList) {
		toSerialize["exceptions_list"] = o.ExceptionsList
	}
	if !IsNil(o.FalsePositives) {
		toSerialize["false_positives"] = o.FalsePositives
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	if !IsNil(o.InvestigationFields) {
		toSerialize["investigation_fields"] = o.InvestigationFields
	}
	if !IsNil(o.License) {
		toSerialize["license"] = o.License
	}
	if !IsNil(o.MaxSignals) {
		toSerialize["max_signals"] = o.MaxSignals
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.Outcome) {
		toSerialize["outcome"] = o.Outcome
	}
	if !IsNil(o.OutputIndex) {
		toSerialize["output_index"] = o.OutputIndex
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.RelatedIntegrations) {
		toSerialize["related_integrations"] = o.RelatedIntegrations
	}
	if !IsNil(o.RequiredFields) {
		toSerialize["required_fields"] = o.RequiredFields
	}
	if !IsNil(o.RiskScore) {
		toSerialize["risk_score"] = o.RiskScore
	}
	if !IsNil(o.RiskScoreMapping) {
		toSerialize["risk_score_mapping"] = o.RiskScoreMapping
	}
	if !IsNil(o.RuleId) {
		toSerialize["rule_id"] = o.RuleId
	}
	if !IsNil(o.RuleNameOverride) {
		toSerialize["rule_name_override"] = o.RuleNameOverride
	}
	if !IsNil(o.Setup) {
		toSerialize["setup"] = o.Setup
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.SeverityMapping) {
		toSerialize["severity_mapping"] = o.SeverityMapping
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Threat) {
		toSerialize["threat"] = o.Threat
	}
	if !IsNil(o.Throttle) {
		toSerialize["throttle"] = o.Throttle
	}
	if !IsNil(o.TimelineId) {
		toSerialize["timeline_id"] = o.TimelineId
	}
	if !IsNil(o.TimelineTitle) {
		toSerialize["timeline_title"] = o.TimelineTitle
	}
	if !IsNil(o.TimestampOverride) {
		toSerialize["timestamp_override"] = o.TimestampOverride
	}
	if !IsNil(o.TimestampOverrideFallbackDisabled) {
		toSerialize["timestamp_override_fallback_disabled"] = o.TimestampOverrideFallbackDisabled
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableMachineLearningRulePatchProps struct {
	value *MachineLearningRulePatchProps
	isSet bool
}

func (v NullableMachineLearningRulePatchProps) Get() *MachineLearningRulePatchProps {
	return v.value
}

func (v *NullableMachineLearningRulePatchProps) Set(val *MachineLearningRulePatchProps) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineLearningRulePatchProps) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineLearningRulePatchProps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineLearningRulePatchProps(val *MachineLearningRulePatchProps) *NullableMachineLearningRulePatchProps {
	return &NullableMachineLearningRulePatchProps{value: val, isSet: true}
}

func (v NullableMachineLearningRulePatchProps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineLearningRulePatchProps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
