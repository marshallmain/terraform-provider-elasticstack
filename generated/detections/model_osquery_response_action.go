/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the OsqueryResponseAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OsqueryResponseAction{}

// OsqueryResponseAction struct for OsqueryResponseAction
type OsqueryResponseAction struct {
	ActionTypeId string        `json:"action_type_id"`
	Params       OsqueryParams `json:"params"`
}

// NewOsqueryResponseAction instantiates a new OsqueryResponseAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOsqueryResponseAction(actionTypeId string, params OsqueryParams) *OsqueryResponseAction {
	this := OsqueryResponseAction{}
	this.ActionTypeId = actionTypeId
	this.Params = params
	return &this
}

// NewOsqueryResponseActionWithDefaults instantiates a new OsqueryResponseAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOsqueryResponseActionWithDefaults() *OsqueryResponseAction {
	this := OsqueryResponseAction{}
	return &this
}

// GetActionTypeId returns the ActionTypeId field value
func (o *OsqueryResponseAction) GetActionTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActionTypeId
}

// GetActionTypeIdOk returns a tuple with the ActionTypeId field value
// and a boolean to check if the value has been set.
func (o *OsqueryResponseAction) GetActionTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionTypeId, true
}

// SetActionTypeId sets field value
func (o *OsqueryResponseAction) SetActionTypeId(v string) {
	o.ActionTypeId = v
}

// GetParams returns the Params field value
func (o *OsqueryResponseAction) GetParams() OsqueryParams {
	if o == nil {
		var ret OsqueryParams
		return ret
	}

	return o.Params
}

// GetParamsOk returns a tuple with the Params field value
// and a boolean to check if the value has been set.
func (o *OsqueryResponseAction) GetParamsOk() (*OsqueryParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Params, true
}

// SetParams sets field value
func (o *OsqueryResponseAction) SetParams(v OsqueryParams) {
	o.Params = v
}

func (o OsqueryResponseAction) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OsqueryResponseAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action_type_id"] = o.ActionTypeId
	toSerialize["params"] = o.Params
	return toSerialize, nil
}

type NullableOsqueryResponseAction struct {
	value *OsqueryResponseAction
	isSet bool
}

func (v NullableOsqueryResponseAction) Get() *OsqueryResponseAction {
	return v.value
}

func (v *NullableOsqueryResponseAction) Set(val *OsqueryResponseAction) {
	v.value = val
	v.isSet = true
}

func (v NullableOsqueryResponseAction) IsSet() bool {
	return v.isSet
}

func (v *NullableOsqueryResponseAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOsqueryResponseAction(val *OsqueryResponseAction) *NullableOsqueryResponseAction {
	return &NullableOsqueryResponseAction{value: val, isSet: true}
}

func (v NullableOsqueryResponseAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOsqueryResponseAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
