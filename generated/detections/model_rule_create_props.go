/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
	"fmt"
)

// RuleCreateProps struct for RuleCreateProps
type RuleCreateProps struct {
	EqlRuleCreateProps             *EqlRuleCreateProps
	EsqlRuleCreateProps            *EsqlRuleCreateProps
	MachineLearningRuleCreateProps *MachineLearningRuleCreateProps
	NewTermsRuleCreateProps        *NewTermsRuleCreateProps
	QueryRuleCreateProps           *QueryRuleCreateProps
	SavedQueryRuleCreateProps      *SavedQueryRuleCreateProps
	ThreatMatchRuleCreateProps     *ThreatMatchRuleCreateProps
	ThresholdRuleCreateProps       *ThresholdRuleCreateProps
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *RuleCreateProps) UnmarshalJSON(data []byte) error {
	var err error
	// use discriminator value to speed up the lookup
	var jsonDict map[string]interface{}
	err = json.Unmarshal(data, &jsonDict)
	if err != nil {
		return fmt.Errorf("failed to unmarshal JSON into map for the discriminator lookup")
	}

	// check if the discriminator value is 'EqlRuleCreateProps'
	if jsonDict["type"] == "EqlRuleCreateProps" {
		// try to unmarshal JSON data into EqlRuleCreateProps
		err = json.Unmarshal(data, &dst.EqlRuleCreateProps)
		if err == nil {
			jsonEqlRuleCreateProps, _ := json.Marshal(dst.EqlRuleCreateProps)
			if string(jsonEqlRuleCreateProps) == "{}" { // empty struct
				dst.EqlRuleCreateProps = nil
			} else {
				return nil // data stored in dst.EqlRuleCreateProps, return on the first match
			}
		} else {
			dst.EqlRuleCreateProps = nil
		}
	}

	// check if the discriminator value is 'EsqlRuleCreateProps'
	if jsonDict["type"] == "EsqlRuleCreateProps" {
		// try to unmarshal JSON data into EsqlRuleCreateProps
		err = json.Unmarshal(data, &dst.EsqlRuleCreateProps)
		if err == nil {
			jsonEsqlRuleCreateProps, _ := json.Marshal(dst.EsqlRuleCreateProps)
			if string(jsonEsqlRuleCreateProps) == "{}" { // empty struct
				dst.EsqlRuleCreateProps = nil
			} else {
				return nil // data stored in dst.EsqlRuleCreateProps, return on the first match
			}
		} else {
			dst.EsqlRuleCreateProps = nil
		}
	}

	// check if the discriminator value is 'MachineLearningRuleCreateProps'
	if jsonDict["type"] == "MachineLearningRuleCreateProps" {
		// try to unmarshal JSON data into MachineLearningRuleCreateProps
		err = json.Unmarshal(data, &dst.MachineLearningRuleCreateProps)
		if err == nil {
			jsonMachineLearningRuleCreateProps, _ := json.Marshal(dst.MachineLearningRuleCreateProps)
			if string(jsonMachineLearningRuleCreateProps) == "{}" { // empty struct
				dst.MachineLearningRuleCreateProps = nil
			} else {
				return nil // data stored in dst.MachineLearningRuleCreateProps, return on the first match
			}
		} else {
			dst.MachineLearningRuleCreateProps = nil
		}
	}

	// check if the discriminator value is 'NewTermsRuleCreateProps'
	if jsonDict["type"] == "NewTermsRuleCreateProps" {
		// try to unmarshal JSON data into NewTermsRuleCreateProps
		err = json.Unmarshal(data, &dst.NewTermsRuleCreateProps)
		if err == nil {
			jsonNewTermsRuleCreateProps, _ := json.Marshal(dst.NewTermsRuleCreateProps)
			if string(jsonNewTermsRuleCreateProps) == "{}" { // empty struct
				dst.NewTermsRuleCreateProps = nil
			} else {
				return nil // data stored in dst.NewTermsRuleCreateProps, return on the first match
			}
		} else {
			dst.NewTermsRuleCreateProps = nil
		}
	}

	// check if the discriminator value is 'QueryRuleCreateProps'
	if jsonDict["type"] == "QueryRuleCreateProps" {
		// try to unmarshal JSON data into QueryRuleCreateProps
		err = json.Unmarshal(data, &dst.QueryRuleCreateProps)
		if err == nil {
			jsonQueryRuleCreateProps, _ := json.Marshal(dst.QueryRuleCreateProps)
			if string(jsonQueryRuleCreateProps) == "{}" { // empty struct
				dst.QueryRuleCreateProps = nil
			} else {
				return nil // data stored in dst.QueryRuleCreateProps, return on the first match
			}
		} else {
			dst.QueryRuleCreateProps = nil
		}
	}

	// check if the discriminator value is 'SavedQueryRuleCreateProps'
	if jsonDict["type"] == "SavedQueryRuleCreateProps" {
		// try to unmarshal JSON data into SavedQueryRuleCreateProps
		err = json.Unmarshal(data, &dst.SavedQueryRuleCreateProps)
		if err == nil {
			jsonSavedQueryRuleCreateProps, _ := json.Marshal(dst.SavedQueryRuleCreateProps)
			if string(jsonSavedQueryRuleCreateProps) == "{}" { // empty struct
				dst.SavedQueryRuleCreateProps = nil
			} else {
				return nil // data stored in dst.SavedQueryRuleCreateProps, return on the first match
			}
		} else {
			dst.SavedQueryRuleCreateProps = nil
		}
	}

	// check if the discriminator value is 'ThreatMatchRuleCreateProps'
	if jsonDict["type"] == "ThreatMatchRuleCreateProps" {
		// try to unmarshal JSON data into ThreatMatchRuleCreateProps
		err = json.Unmarshal(data, &dst.ThreatMatchRuleCreateProps)
		if err == nil {
			jsonThreatMatchRuleCreateProps, _ := json.Marshal(dst.ThreatMatchRuleCreateProps)
			if string(jsonThreatMatchRuleCreateProps) == "{}" { // empty struct
				dst.ThreatMatchRuleCreateProps = nil
			} else {
				return nil // data stored in dst.ThreatMatchRuleCreateProps, return on the first match
			}
		} else {
			dst.ThreatMatchRuleCreateProps = nil
		}
	}

	// check if the discriminator value is 'ThresholdRuleCreateProps'
	if jsonDict["type"] == "ThresholdRuleCreateProps" {
		// try to unmarshal JSON data into ThresholdRuleCreateProps
		err = json.Unmarshal(data, &dst.ThresholdRuleCreateProps)
		if err == nil {
			jsonThresholdRuleCreateProps, _ := json.Marshal(dst.ThresholdRuleCreateProps)
			if string(jsonThresholdRuleCreateProps) == "{}" { // empty struct
				dst.ThresholdRuleCreateProps = nil
			} else {
				return nil // data stored in dst.ThresholdRuleCreateProps, return on the first match
			}
		} else {
			dst.ThresholdRuleCreateProps = nil
		}
	}

	// try to unmarshal JSON data into EqlRuleCreateProps
	err = json.Unmarshal(data, &dst.EqlRuleCreateProps)
	if err == nil {
		jsonEqlRuleCreateProps, _ := json.Marshal(dst.EqlRuleCreateProps)
		if string(jsonEqlRuleCreateProps) == "{}" { // empty struct
			dst.EqlRuleCreateProps = nil
		} else {
			return nil // data stored in dst.EqlRuleCreateProps, return on the first match
		}
	} else {
		dst.EqlRuleCreateProps = nil
	}

	// try to unmarshal JSON data into EsqlRuleCreateProps
	err = json.Unmarshal(data, &dst.EsqlRuleCreateProps)
	if err == nil {
		jsonEsqlRuleCreateProps, _ := json.Marshal(dst.EsqlRuleCreateProps)
		if string(jsonEsqlRuleCreateProps) == "{}" { // empty struct
			dst.EsqlRuleCreateProps = nil
		} else {
			return nil // data stored in dst.EsqlRuleCreateProps, return on the first match
		}
	} else {
		dst.EsqlRuleCreateProps = nil
	}

	// try to unmarshal JSON data into MachineLearningRuleCreateProps
	err = json.Unmarshal(data, &dst.MachineLearningRuleCreateProps)
	if err == nil {
		jsonMachineLearningRuleCreateProps, _ := json.Marshal(dst.MachineLearningRuleCreateProps)
		if string(jsonMachineLearningRuleCreateProps) == "{}" { // empty struct
			dst.MachineLearningRuleCreateProps = nil
		} else {
			return nil // data stored in dst.MachineLearningRuleCreateProps, return on the first match
		}
	} else {
		dst.MachineLearningRuleCreateProps = nil
	}

	// try to unmarshal JSON data into NewTermsRuleCreateProps
	err = json.Unmarshal(data, &dst.NewTermsRuleCreateProps)
	if err == nil {
		jsonNewTermsRuleCreateProps, _ := json.Marshal(dst.NewTermsRuleCreateProps)
		if string(jsonNewTermsRuleCreateProps) == "{}" { // empty struct
			dst.NewTermsRuleCreateProps = nil
		} else {
			return nil // data stored in dst.NewTermsRuleCreateProps, return on the first match
		}
	} else {
		dst.NewTermsRuleCreateProps = nil
	}

	// try to unmarshal JSON data into QueryRuleCreateProps
	err = json.Unmarshal(data, &dst.QueryRuleCreateProps)
	if err == nil {
		jsonQueryRuleCreateProps, _ := json.Marshal(dst.QueryRuleCreateProps)
		if string(jsonQueryRuleCreateProps) == "{}" { // empty struct
			dst.QueryRuleCreateProps = nil
		} else {
			return nil // data stored in dst.QueryRuleCreateProps, return on the first match
		}
	} else {
		dst.QueryRuleCreateProps = nil
	}

	// try to unmarshal JSON data into SavedQueryRuleCreateProps
	err = json.Unmarshal(data, &dst.SavedQueryRuleCreateProps)
	if err == nil {
		jsonSavedQueryRuleCreateProps, _ := json.Marshal(dst.SavedQueryRuleCreateProps)
		if string(jsonSavedQueryRuleCreateProps) == "{}" { // empty struct
			dst.SavedQueryRuleCreateProps = nil
		} else {
			return nil // data stored in dst.SavedQueryRuleCreateProps, return on the first match
		}
	} else {
		dst.SavedQueryRuleCreateProps = nil
	}

	// try to unmarshal JSON data into ThreatMatchRuleCreateProps
	err = json.Unmarshal(data, &dst.ThreatMatchRuleCreateProps)
	if err == nil {
		jsonThreatMatchRuleCreateProps, _ := json.Marshal(dst.ThreatMatchRuleCreateProps)
		if string(jsonThreatMatchRuleCreateProps) == "{}" { // empty struct
			dst.ThreatMatchRuleCreateProps = nil
		} else {
			return nil // data stored in dst.ThreatMatchRuleCreateProps, return on the first match
		}
	} else {
		dst.ThreatMatchRuleCreateProps = nil
	}

	// try to unmarshal JSON data into ThresholdRuleCreateProps
	err = json.Unmarshal(data, &dst.ThresholdRuleCreateProps)
	if err == nil {
		jsonThresholdRuleCreateProps, _ := json.Marshal(dst.ThresholdRuleCreateProps)
		if string(jsonThresholdRuleCreateProps) == "{}" { // empty struct
			dst.ThresholdRuleCreateProps = nil
		} else {
			return nil // data stored in dst.ThresholdRuleCreateProps, return on the first match
		}
	} else {
		dst.ThresholdRuleCreateProps = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(RuleCreateProps)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *RuleCreateProps) MarshalJSON() ([]byte, error) {
	if src.EqlRuleCreateProps != nil {
		return json.Marshal(&src.EqlRuleCreateProps)
	}

	if src.EsqlRuleCreateProps != nil {
		return json.Marshal(&src.EsqlRuleCreateProps)
	}

	if src.MachineLearningRuleCreateProps != nil {
		return json.Marshal(&src.MachineLearningRuleCreateProps)
	}

	if src.NewTermsRuleCreateProps != nil {
		return json.Marshal(&src.NewTermsRuleCreateProps)
	}

	if src.QueryRuleCreateProps != nil {
		return json.Marshal(&src.QueryRuleCreateProps)
	}

	if src.SavedQueryRuleCreateProps != nil {
		return json.Marshal(&src.SavedQueryRuleCreateProps)
	}

	if src.ThreatMatchRuleCreateProps != nil {
		return json.Marshal(&src.ThreatMatchRuleCreateProps)
	}

	if src.ThresholdRuleCreateProps != nil {
		return json.Marshal(&src.ThresholdRuleCreateProps)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableRuleCreateProps struct {
	value *RuleCreateProps
	isSet bool
}

func (v NullableRuleCreateProps) Get() *RuleCreateProps {
	return v.value
}

func (v *NullableRuleCreateProps) Set(val *RuleCreateProps) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleCreateProps) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleCreateProps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleCreateProps(val *RuleCreateProps) *NullableRuleCreateProps {
	return &NullableRuleCreateProps{value: val, isSet: true}
}

func (v NullableRuleCreateProps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleCreateProps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
