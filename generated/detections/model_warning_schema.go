/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the WarningSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WarningSchema{}

// WarningSchema struct for WarningSchema
type WarningSchema struct {
	ActionPath  string  `json:"actionPath"`
	ButtonLabel *string `json:"buttonLabel,omitempty"`
	Message     string  `json:"message"`
	Type        string  `json:"type"`
}

// NewWarningSchema instantiates a new WarningSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWarningSchema(actionPath string, message string, type_ string) *WarningSchema {
	this := WarningSchema{}
	this.ActionPath = actionPath
	this.Message = message
	this.Type = type_
	return &this
}

// NewWarningSchemaWithDefaults instantiates a new WarningSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWarningSchemaWithDefaults() *WarningSchema {
	this := WarningSchema{}
	return &this
}

// GetActionPath returns the ActionPath field value
func (o *WarningSchema) GetActionPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActionPath
}

// GetActionPathOk returns a tuple with the ActionPath field value
// and a boolean to check if the value has been set.
func (o *WarningSchema) GetActionPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionPath, true
}

// SetActionPath sets field value
func (o *WarningSchema) SetActionPath(v string) {
	o.ActionPath = v
}

// GetButtonLabel returns the ButtonLabel field value if set, zero value otherwise.
func (o *WarningSchema) GetButtonLabel() string {
	if o == nil || IsNil(o.ButtonLabel) {
		var ret string
		return ret
	}
	return *o.ButtonLabel
}

// GetButtonLabelOk returns a tuple with the ButtonLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WarningSchema) GetButtonLabelOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonLabel) {
		return nil, false
	}
	return o.ButtonLabel, true
}

// HasButtonLabel returns a boolean if a field has been set.
func (o *WarningSchema) HasButtonLabel() bool {
	if o != nil && !IsNil(o.ButtonLabel) {
		return true
	}

	return false
}

// SetButtonLabel gets a reference to the given string and assigns it to the ButtonLabel field.
func (o *WarningSchema) SetButtonLabel(v string) {
	o.ButtonLabel = &v
}

// GetMessage returns the Message field value
func (o *WarningSchema) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *WarningSchema) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *WarningSchema) SetMessage(v string) {
	o.Message = v
}

// GetType returns the Type field value
func (o *WarningSchema) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *WarningSchema) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *WarningSchema) SetType(v string) {
	o.Type = v
}

func (o WarningSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WarningSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["actionPath"] = o.ActionPath
	if !IsNil(o.ButtonLabel) {
		toSerialize["buttonLabel"] = o.ButtonLabel
	}
	toSerialize["message"] = o.Message
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableWarningSchema struct {
	value *WarningSchema
	isSet bool
}

func (v NullableWarningSchema) Get() *WarningSchema {
	return v.value
}

func (v *NullableWarningSchema) Set(val *WarningSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableWarningSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableWarningSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWarningSchema(val *WarningSchema) *NullableWarningSchema {
	return &NullableWarningSchema{value: val, isSet: true}
}

func (v NullableWarningSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWarningSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
