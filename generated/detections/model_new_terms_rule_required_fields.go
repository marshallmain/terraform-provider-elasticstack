/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the NewTermsRuleRequiredFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewTermsRuleRequiredFields{}

// NewTermsRuleRequiredFields struct for NewTermsRuleRequiredFields
type NewTermsRuleRequiredFields struct {
	// A string that is not empty and does not contain only whitespace
	HistoryWindowStart string   `json:"history_window_start"`
	NewTermsFields     []string `json:"new_terms_fields"`
	Query              string   `json:"query"`
	// Rule type
	Type string `json:"type"`
}

// NewNewTermsRuleRequiredFields instantiates a new NewTermsRuleRequiredFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewTermsRuleRequiredFields(historyWindowStart string, newTermsFields []string, query string, type_ string) *NewTermsRuleRequiredFields {
	this := NewTermsRuleRequiredFields{}
	this.HistoryWindowStart = historyWindowStart
	this.NewTermsFields = newTermsFields
	this.Query = query
	this.Type = type_
	return &this
}

// NewNewTermsRuleRequiredFieldsWithDefaults instantiates a new NewTermsRuleRequiredFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewTermsRuleRequiredFieldsWithDefaults() *NewTermsRuleRequiredFields {
	this := NewTermsRuleRequiredFields{}
	return &this
}

// GetHistoryWindowStart returns the HistoryWindowStart field value
func (o *NewTermsRuleRequiredFields) GetHistoryWindowStart() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HistoryWindowStart
}

// GetHistoryWindowStartOk returns a tuple with the HistoryWindowStart field value
// and a boolean to check if the value has been set.
func (o *NewTermsRuleRequiredFields) GetHistoryWindowStartOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HistoryWindowStart, true
}

// SetHistoryWindowStart sets field value
func (o *NewTermsRuleRequiredFields) SetHistoryWindowStart(v string) {
	o.HistoryWindowStart = v
}

// GetNewTermsFields returns the NewTermsFields field value
func (o *NewTermsRuleRequiredFields) GetNewTermsFields() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.NewTermsFields
}

// GetNewTermsFieldsOk returns a tuple with the NewTermsFields field value
// and a boolean to check if the value has been set.
func (o *NewTermsRuleRequiredFields) GetNewTermsFieldsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NewTermsFields, true
}

// SetNewTermsFields sets field value
func (o *NewTermsRuleRequiredFields) SetNewTermsFields(v []string) {
	o.NewTermsFields = v
}

// GetQuery returns the Query field value
func (o *NewTermsRuleRequiredFields) GetQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *NewTermsRuleRequiredFields) GetQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *NewTermsRuleRequiredFields) SetQuery(v string) {
	o.Query = v
}

// GetType returns the Type field value
func (o *NewTermsRuleRequiredFields) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *NewTermsRuleRequiredFields) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *NewTermsRuleRequiredFields) SetType(v string) {
	o.Type = v
}

func (o NewTermsRuleRequiredFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NewTermsRuleRequiredFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["history_window_start"] = o.HistoryWindowStart
	toSerialize["new_terms_fields"] = o.NewTermsFields
	toSerialize["query"] = o.Query
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableNewTermsRuleRequiredFields struct {
	value *NewTermsRuleRequiredFields
	isSet bool
}

func (v NullableNewTermsRuleRequiredFields) Get() *NewTermsRuleRequiredFields {
	return v.value
}

func (v *NullableNewTermsRuleRequiredFields) Set(val *NewTermsRuleRequiredFields) {
	v.value = val
	v.isSet = true
}

func (v NullableNewTermsRuleRequiredFields) IsSet() bool {
	return v.isSet
}

func (v *NullableNewTermsRuleRequiredFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewTermsRuleRequiredFields(val *NewTermsRuleRequiredFields) *NullableNewTermsRuleRequiredFields {
	return &NullableNewTermsRuleRequiredFields{value: val, isSet: true}
}

func (v NullableNewTermsRuleRequiredFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewTermsRuleRequiredFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
