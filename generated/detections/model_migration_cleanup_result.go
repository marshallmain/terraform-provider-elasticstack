/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
	"time"
)

// checks if the MigrationCleanupResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MigrationCleanupResult{}

// MigrationCleanupResult struct for MigrationCleanupResult
type MigrationCleanupResult struct {
	DestinationIndex string                       `json:"destinationIndex"`
	Error            *MigrationCleanupResultError `json:"error,omitempty"`
	Id               string                       `json:"id"`
	SourceIndex      string                       `json:"sourceIndex"`
	Status           string                       `json:"status"`
	Updated          time.Time                    `json:"updated"`
	Version          string                       `json:"version"`
}

// NewMigrationCleanupResult instantiates a new MigrationCleanupResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMigrationCleanupResult(destinationIndex string, id string, sourceIndex string, status string, updated time.Time, version string) *MigrationCleanupResult {
	this := MigrationCleanupResult{}
	this.DestinationIndex = destinationIndex
	this.Id = id
	this.SourceIndex = sourceIndex
	this.Status = status
	this.Updated = updated
	this.Version = version
	return &this
}

// NewMigrationCleanupResultWithDefaults instantiates a new MigrationCleanupResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMigrationCleanupResultWithDefaults() *MigrationCleanupResult {
	this := MigrationCleanupResult{}
	return &this
}

// GetDestinationIndex returns the DestinationIndex field value
func (o *MigrationCleanupResult) GetDestinationIndex() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationIndex
}

// GetDestinationIndexOk returns a tuple with the DestinationIndex field value
// and a boolean to check if the value has been set.
func (o *MigrationCleanupResult) GetDestinationIndexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationIndex, true
}

// SetDestinationIndex sets field value
func (o *MigrationCleanupResult) SetDestinationIndex(v string) {
	o.DestinationIndex = v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *MigrationCleanupResult) GetError() MigrationCleanupResultError {
	if o == nil || IsNil(o.Error) {
		var ret MigrationCleanupResultError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationCleanupResult) GetErrorOk() (*MigrationCleanupResultError, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *MigrationCleanupResult) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given MigrationCleanupResultError and assigns it to the Error field.
func (o *MigrationCleanupResult) SetError(v MigrationCleanupResultError) {
	o.Error = &v
}

// GetId returns the Id field value
func (o *MigrationCleanupResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MigrationCleanupResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MigrationCleanupResult) SetId(v string) {
	o.Id = v
}

// GetSourceIndex returns the SourceIndex field value
func (o *MigrationCleanupResult) GetSourceIndex() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceIndex
}

// GetSourceIndexOk returns a tuple with the SourceIndex field value
// and a boolean to check if the value has been set.
func (o *MigrationCleanupResult) GetSourceIndexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceIndex, true
}

// SetSourceIndex sets field value
func (o *MigrationCleanupResult) SetSourceIndex(v string) {
	o.SourceIndex = v
}

// GetStatus returns the Status field value
func (o *MigrationCleanupResult) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *MigrationCleanupResult) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *MigrationCleanupResult) SetStatus(v string) {
	o.Status = v
}

// GetUpdated returns the Updated field value
func (o *MigrationCleanupResult) GetUpdated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value
// and a boolean to check if the value has been set.
func (o *MigrationCleanupResult) GetUpdatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Updated, true
}

// SetUpdated sets field value
func (o *MigrationCleanupResult) SetUpdated(v time.Time) {
	o.Updated = v
}

// GetVersion returns the Version field value
func (o *MigrationCleanupResult) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *MigrationCleanupResult) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *MigrationCleanupResult) SetVersion(v string) {
	o.Version = v
}

func (o MigrationCleanupResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MigrationCleanupResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["destinationIndex"] = o.DestinationIndex
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	toSerialize["id"] = o.Id
	toSerialize["sourceIndex"] = o.SourceIndex
	toSerialize["status"] = o.Status
	toSerialize["updated"] = o.Updated
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

type NullableMigrationCleanupResult struct {
	value *MigrationCleanupResult
	isSet bool
}

func (v NullableMigrationCleanupResult) Get() *MigrationCleanupResult {
	return v.value
}

func (v *NullableMigrationCleanupResult) Set(val *MigrationCleanupResult) {
	v.value = val
	v.isSet = true
}

func (v NullableMigrationCleanupResult) IsSet() bool {
	return v.isSet
}

func (v *NullableMigrationCleanupResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMigrationCleanupResult(val *MigrationCleanupResult) *NullableMigrationCleanupResult {
	return &NullableMigrationCleanupResult{value: val, isSet: true}
}

func (v NullableMigrationCleanupResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMigrationCleanupResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
