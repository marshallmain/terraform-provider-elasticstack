/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the ThresholdRuleCreateFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThresholdRuleCreateFields{}

// ThresholdRuleCreateFields struct for ThresholdRuleCreateFields
type ThresholdRuleCreateFields struct {
	Query     string    `json:"query"`
	Threshold Threshold `json:"threshold"`
	// Rule type
	Type             string                     `json:"type"`
	AlertSuppression *ThresholdAlertSuppression `json:"alert_suppression,omitempty"`
	DataViewId       *string                    `json:"data_view_id,omitempty"`
	Filters          []interface{}              `json:"filters,omitempty"`
	Index            []string                   `json:"index,omitempty"`
	SavedId          *string                    `json:"saved_id,omitempty"`
	Language         *KqlQueryLanguage          `json:"language,omitempty"`
}

// NewThresholdRuleCreateFields instantiates a new ThresholdRuleCreateFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThresholdRuleCreateFields(query string, threshold Threshold, type_ string) *ThresholdRuleCreateFields {
	this := ThresholdRuleCreateFields{}
	this.Query = query
	this.Threshold = threshold
	this.Type = type_
	return &this
}

// NewThresholdRuleCreateFieldsWithDefaults instantiates a new ThresholdRuleCreateFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThresholdRuleCreateFieldsWithDefaults() *ThresholdRuleCreateFields {
	this := ThresholdRuleCreateFields{}
	return &this
}

// GetQuery returns the Query field value
func (o *ThresholdRuleCreateFields) GetQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *ThresholdRuleCreateFields) GetQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *ThresholdRuleCreateFields) SetQuery(v string) {
	o.Query = v
}

// GetThreshold returns the Threshold field value
func (o *ThresholdRuleCreateFields) GetThreshold() Threshold {
	if o == nil {
		var ret Threshold
		return ret
	}

	return o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value
// and a boolean to check if the value has been set.
func (o *ThresholdRuleCreateFields) GetThresholdOk() (*Threshold, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Threshold, true
}

// SetThreshold sets field value
func (o *ThresholdRuleCreateFields) SetThreshold(v Threshold) {
	o.Threshold = v
}

// GetType returns the Type field value
func (o *ThresholdRuleCreateFields) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ThresholdRuleCreateFields) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ThresholdRuleCreateFields) SetType(v string) {
	o.Type = v
}

// GetAlertSuppression returns the AlertSuppression field value if set, zero value otherwise.
func (o *ThresholdRuleCreateFields) GetAlertSuppression() ThresholdAlertSuppression {
	if o == nil || IsNil(o.AlertSuppression) {
		var ret ThresholdAlertSuppression
		return ret
	}
	return *o.AlertSuppression
}

// GetAlertSuppressionOk returns a tuple with the AlertSuppression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRuleCreateFields) GetAlertSuppressionOk() (*ThresholdAlertSuppression, bool) {
	if o == nil || IsNil(o.AlertSuppression) {
		return nil, false
	}
	return o.AlertSuppression, true
}

// HasAlertSuppression returns a boolean if a field has been set.
func (o *ThresholdRuleCreateFields) HasAlertSuppression() bool {
	if o != nil && !IsNil(o.AlertSuppression) {
		return true
	}

	return false
}

// SetAlertSuppression gets a reference to the given ThresholdAlertSuppression and assigns it to the AlertSuppression field.
func (o *ThresholdRuleCreateFields) SetAlertSuppression(v ThresholdAlertSuppression) {
	o.AlertSuppression = &v
}

// GetDataViewId returns the DataViewId field value if set, zero value otherwise.
func (o *ThresholdRuleCreateFields) GetDataViewId() string {
	if o == nil || IsNil(o.DataViewId) {
		var ret string
		return ret
	}
	return *o.DataViewId
}

// GetDataViewIdOk returns a tuple with the DataViewId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRuleCreateFields) GetDataViewIdOk() (*string, bool) {
	if o == nil || IsNil(o.DataViewId) {
		return nil, false
	}
	return o.DataViewId, true
}

// HasDataViewId returns a boolean if a field has been set.
func (o *ThresholdRuleCreateFields) HasDataViewId() bool {
	if o != nil && !IsNil(o.DataViewId) {
		return true
	}

	return false
}

// SetDataViewId gets a reference to the given string and assigns it to the DataViewId field.
func (o *ThresholdRuleCreateFields) SetDataViewId(v string) {
	o.DataViewId = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ThresholdRuleCreateFields) GetFilters() []interface{} {
	if o == nil || IsNil(o.Filters) {
		var ret []interface{}
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRuleCreateFields) GetFiltersOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ThresholdRuleCreateFields) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []interface{} and assigns it to the Filters field.
func (o *ThresholdRuleCreateFields) SetFilters(v []interface{}) {
	o.Filters = v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *ThresholdRuleCreateFields) GetIndex() []string {
	if o == nil || IsNil(o.Index) {
		var ret []string
		return ret
	}
	return o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRuleCreateFields) GetIndexOk() ([]string, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *ThresholdRuleCreateFields) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given []string and assigns it to the Index field.
func (o *ThresholdRuleCreateFields) SetIndex(v []string) {
	o.Index = v
}

// GetSavedId returns the SavedId field value if set, zero value otherwise.
func (o *ThresholdRuleCreateFields) GetSavedId() string {
	if o == nil || IsNil(o.SavedId) {
		var ret string
		return ret
	}
	return *o.SavedId
}

// GetSavedIdOk returns a tuple with the SavedId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRuleCreateFields) GetSavedIdOk() (*string, bool) {
	if o == nil || IsNil(o.SavedId) {
		return nil, false
	}
	return o.SavedId, true
}

// HasSavedId returns a boolean if a field has been set.
func (o *ThresholdRuleCreateFields) HasSavedId() bool {
	if o != nil && !IsNil(o.SavedId) {
		return true
	}

	return false
}

// SetSavedId gets a reference to the given string and assigns it to the SavedId field.
func (o *ThresholdRuleCreateFields) SetSavedId(v string) {
	o.SavedId = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *ThresholdRuleCreateFields) GetLanguage() KqlQueryLanguage {
	if o == nil || IsNil(o.Language) {
		var ret KqlQueryLanguage
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRuleCreateFields) GetLanguageOk() (*KqlQueryLanguage, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *ThresholdRuleCreateFields) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given KqlQueryLanguage and assigns it to the Language field.
func (o *ThresholdRuleCreateFields) SetLanguage(v KqlQueryLanguage) {
	o.Language = &v
}

func (o ThresholdRuleCreateFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThresholdRuleCreateFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["query"] = o.Query
	toSerialize["threshold"] = o.Threshold
	toSerialize["type"] = o.Type
	if !IsNil(o.AlertSuppression) {
		toSerialize["alert_suppression"] = o.AlertSuppression
	}
	if !IsNil(o.DataViewId) {
		toSerialize["data_view_id"] = o.DataViewId
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.SavedId) {
		toSerialize["saved_id"] = o.SavedId
	}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	return toSerialize, nil
}

type NullableThresholdRuleCreateFields struct {
	value *ThresholdRuleCreateFields
	isSet bool
}

func (v NullableThresholdRuleCreateFields) Get() *ThresholdRuleCreateFields {
	return v.value
}

func (v *NullableThresholdRuleCreateFields) Set(val *ThresholdRuleCreateFields) {
	v.value = val
	v.isSet = true
}

func (v NullableThresholdRuleCreateFields) IsSet() bool {
	return v.isSet
}

func (v *NullableThresholdRuleCreateFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThresholdRuleCreateFields(val *ThresholdRuleCreateFields) *NullableThresholdRuleCreateFields {
	return &NullableThresholdRuleCreateFields{value: val, isSet: true}
}

func (v NullableThresholdRuleCreateFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThresholdRuleCreateFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
