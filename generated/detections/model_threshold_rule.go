/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
	"time"
)

// checks if the ThresholdRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThresholdRule{}

// ThresholdRule struct for ThresholdRule
type ThresholdRule struct {
	CreatedAt        time.Time             `json:"created_at"`
	CreatedBy        string                `json:"created_by"`
	ExecutionSummary *RuleExecutionSummary `json:"execution_summary,omitempty"`
	// A universally unique identifier
	Id string `json:"id"`
	// This field determines whether the rule is a prebuilt Elastic rule. It will be replaced with the `rule_source` field.
	// Deprecated
	Immutable      bool                 `json:"immutable"`
	RequiredFields []RequiredFieldInput `json:"required_fields"`
	Revision       int32                `json:"revision"`
	// Could be any string, not necessarily a UUID
	RuleId     string      `json:"rule_id"`
	RuleSource *RuleSource `json:"rule_source,omitempty"`
	UpdatedAt  time.Time   `json:"updated_at"`
	UpdatedBy  string      `json:"updated_by"`
	Query      string      `json:"query"`
	Threshold  Threshold   `json:"threshold"`
	// Rule type
	Type             string                          `json:"type"`
	AlertSuppression *ThresholdAlertSuppression      `json:"alert_suppression,omitempty"`
	DataViewId       *string                         `json:"data_view_id,omitempty"`
	Filters          []interface{}                   `json:"filters,omitempty"`
	Index            []string                        `json:"index,omitempty"`
	SavedId          *string                         `json:"saved_id,omitempty"`
	Language         KqlQueryLanguage                `json:"language"`
	Actions          []RuleAction                    `json:"actions"`
	AliasPurpose     *SavedObjectResolveAliasPurpose `json:"alias_purpose,omitempty"`
	AliasTargetId    *string                         `json:"alias_target_id,omitempty"`
	Author           []string                        `json:"author"`
	// Determines if the rule acts as a building block. By default, building-block alerts are not displayed in the UI. These rules are used as a foundation for other rules that do generate alerts. Its value must be default.
	BuildingBlockType *string `json:"building_block_type,omitempty"`
	Description       string  `json:"description"`
	// Determines whether the rule is enabled.
	Enabled        bool                `json:"enabled"`
	ExceptionsList []RuleExceptionList `json:"exceptions_list"`
	FalsePositives []string            `json:"false_positives"`
	// Time from which data is analyzed each time the rule runs, using a date math range. For example, now-4200s means the rule analyzes data from 70 minutes before its start time. Defaults to now-6m (analyzes data from 6 minutes before the start time).
	From string `json:"from"`
	// Frequency of rule execution, using a date math range. For example, \"1h\" means the rule runs every hour. Defaults to 5m (5 minutes).
	Interval            string               `json:"interval"`
	InvestigationFields *InvestigationFields `json:"investigation_fields,omitempty"`
	// The rule's license.
	License    *string                `json:"license,omitempty"`
	MaxSignals int32                  `json:"max_signals"`
	Meta       map[string]interface{} `json:"meta,omitempty"`
	Name       string                 `json:"name"`
	// Has no effect.
	Namespace *string `json:"namespace,omitempty"`
	// Notes to help investigate alerts produced by the rule.
	Note    *string                    `json:"note,omitempty"`
	Outcome *SavedObjectResolveOutcome `json:"outcome,omitempty"`
	// (deprecated) Has no effect.
	// Deprecated
	OutputIndex         *string              `json:"output_index,omitempty"`
	References          []string             `json:"references"`
	RelatedIntegrations []RelatedIntegration `json:"related_integrations"`
	// Risk score (0 to 100)
	RiskScore int32 `json:"risk_score"`
	// Overrides generated alerts' risk_score with a value from the source event
	RiskScoreMapping []RiskScoreMappingInner `json:"risk_score_mapping"`
	// Sets the source field for the alert's signal.rule.name value
	RuleNameOverride *string  `json:"rule_name_override,omitempty"`
	Setup            string   `json:"setup"`
	Severity         Severity `json:"severity"`
	// Overrides generated alerts' severity with values from the source event
	SeverityMapping []SeverityMappingInner `json:"severity_mapping"`
	// String array containing words and phrases to help categorize, filter, and search rules. Defaults to an empty array.
	Tags     []string            `json:"tags"`
	Threat   []Threat            `json:"threat"`
	Throttle *RuleActionThrottle `json:"throttle,omitempty"`
	// Timeline template ID
	TimelineId *string `json:"timeline_id,omitempty"`
	// Timeline template title
	TimelineTitle *string `json:"timeline_title,omitempty"`
	// Sets the time field used to query indices
	TimestampOverride *string `json:"timestamp_override,omitempty"`
	// Disables the fallback to the event's @timestamp field
	TimestampOverrideFallbackDisabled *bool  `json:"timestamp_override_fallback_disabled,omitempty"`
	To                                string `json:"to"`
	// The rule's version number.
	Version int32 `json:"version"`
}

// NewThresholdRule instantiates a new ThresholdRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThresholdRule(createdAt time.Time, createdBy string, id string, immutable bool, requiredFields []RequiredFieldInput, revision int32, ruleId string, updatedAt time.Time, updatedBy string, query string, threshold Threshold, type_ string, language KqlQueryLanguage, actions []RuleAction, author []string, description string, enabled bool, exceptionsList []RuleExceptionList, falsePositives []string, from string, interval string, maxSignals int32, name string, references []string, relatedIntegrations []RelatedIntegration, riskScore int32, riskScoreMapping []RiskScoreMappingInner, setup string, severity Severity, severityMapping []SeverityMappingInner, tags []string, threat []Threat, to string, version int32) *ThresholdRule {
	this := ThresholdRule{}
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Id = id
	this.Immutable = immutable
	this.RequiredFields = requiredFields
	this.Revision = revision
	this.RuleId = ruleId
	this.UpdatedAt = updatedAt
	this.UpdatedBy = updatedBy
	this.Query = query
	this.Threshold = threshold
	this.Type = type_
	this.Language = language
	this.Actions = actions
	this.Author = author
	this.Description = description
	this.Enabled = enabled
	this.ExceptionsList = exceptionsList
	this.FalsePositives = falsePositives
	this.From = from
	this.Interval = interval
	this.MaxSignals = maxSignals
	this.Name = name
	this.References = references
	this.RelatedIntegrations = relatedIntegrations
	this.RiskScore = riskScore
	this.RiskScoreMapping = riskScoreMapping
	this.Setup = setup
	this.Severity = severity
	this.SeverityMapping = severityMapping
	this.Tags = tags
	this.Threat = threat
	this.To = to
	this.Version = version
	return &this
}

// NewThresholdRuleWithDefaults instantiates a new ThresholdRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThresholdRuleWithDefaults() *ThresholdRule {
	this := ThresholdRule{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *ThresholdRule) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ThresholdRule) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *ThresholdRule) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *ThresholdRule) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetExecutionSummary returns the ExecutionSummary field value if set, zero value otherwise.
func (o *ThresholdRule) GetExecutionSummary() RuleExecutionSummary {
	if o == nil || IsNil(o.ExecutionSummary) {
		var ret RuleExecutionSummary
		return ret
	}
	return *o.ExecutionSummary
}

// GetExecutionSummaryOk returns a tuple with the ExecutionSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetExecutionSummaryOk() (*RuleExecutionSummary, bool) {
	if o == nil || IsNil(o.ExecutionSummary) {
		return nil, false
	}
	return o.ExecutionSummary, true
}

// HasExecutionSummary returns a boolean if a field has been set.
func (o *ThresholdRule) HasExecutionSummary() bool {
	if o != nil && !IsNil(o.ExecutionSummary) {
		return true
	}

	return false
}

// SetExecutionSummary gets a reference to the given RuleExecutionSummary and assigns it to the ExecutionSummary field.
func (o *ThresholdRule) SetExecutionSummary(v RuleExecutionSummary) {
	o.ExecutionSummary = &v
}

// GetId returns the Id field value
func (o *ThresholdRule) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ThresholdRule) SetId(v string) {
	o.Id = v
}

// GetImmutable returns the Immutable field value
// Deprecated
func (o *ThresholdRule) GetImmutable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Immutable
}

// GetImmutableOk returns a tuple with the Immutable field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *ThresholdRule) GetImmutableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Immutable, true
}

// SetImmutable sets field value
// Deprecated
func (o *ThresholdRule) SetImmutable(v bool) {
	o.Immutable = v
}

// GetRequiredFields returns the RequiredFields field value
func (o *ThresholdRule) GetRequiredFields() []RequiredFieldInput {
	if o == nil {
		var ret []RequiredFieldInput
		return ret
	}

	return o.RequiredFields
}

// GetRequiredFieldsOk returns a tuple with the RequiredFields field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetRequiredFieldsOk() ([]RequiredFieldInput, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequiredFields, true
}

// SetRequiredFields sets field value
func (o *ThresholdRule) SetRequiredFields(v []RequiredFieldInput) {
	o.RequiredFields = v
}

// GetRevision returns the Revision field value
func (o *ThresholdRule) GetRevision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetRevisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *ThresholdRule) SetRevision(v int32) {
	o.Revision = v
}

// GetRuleId returns the RuleId field value
func (o *ThresholdRule) GetRuleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetRuleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleId, true
}

// SetRuleId sets field value
func (o *ThresholdRule) SetRuleId(v string) {
	o.RuleId = v
}

// GetRuleSource returns the RuleSource field value if set, zero value otherwise.
func (o *ThresholdRule) GetRuleSource() RuleSource {
	if o == nil || IsNil(o.RuleSource) {
		var ret RuleSource
		return ret
	}
	return *o.RuleSource
}

// GetRuleSourceOk returns a tuple with the RuleSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetRuleSourceOk() (*RuleSource, bool) {
	if o == nil || IsNil(o.RuleSource) {
		return nil, false
	}
	return o.RuleSource, true
}

// HasRuleSource returns a boolean if a field has been set.
func (o *ThresholdRule) HasRuleSource() bool {
	if o != nil && !IsNil(o.RuleSource) {
		return true
	}

	return false
}

// SetRuleSource gets a reference to the given RuleSource and assigns it to the RuleSource field.
func (o *ThresholdRule) SetRuleSource(v RuleSource) {
	o.RuleSource = &v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ThresholdRule) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ThresholdRule) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetUpdatedBy returns the UpdatedBy field value
func (o *ThresholdRule) GetUpdatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetUpdatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedBy, true
}

// SetUpdatedBy sets field value
func (o *ThresholdRule) SetUpdatedBy(v string) {
	o.UpdatedBy = v
}

// GetQuery returns the Query field value
func (o *ThresholdRule) GetQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *ThresholdRule) SetQuery(v string) {
	o.Query = v
}

// GetThreshold returns the Threshold field value
func (o *ThresholdRule) GetThreshold() Threshold {
	if o == nil {
		var ret Threshold
		return ret
	}

	return o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetThresholdOk() (*Threshold, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Threshold, true
}

// SetThreshold sets field value
func (o *ThresholdRule) SetThreshold(v Threshold) {
	o.Threshold = v
}

// GetType returns the Type field value
func (o *ThresholdRule) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ThresholdRule) SetType(v string) {
	o.Type = v
}

// GetAlertSuppression returns the AlertSuppression field value if set, zero value otherwise.
func (o *ThresholdRule) GetAlertSuppression() ThresholdAlertSuppression {
	if o == nil || IsNil(o.AlertSuppression) {
		var ret ThresholdAlertSuppression
		return ret
	}
	return *o.AlertSuppression
}

// GetAlertSuppressionOk returns a tuple with the AlertSuppression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetAlertSuppressionOk() (*ThresholdAlertSuppression, bool) {
	if o == nil || IsNil(o.AlertSuppression) {
		return nil, false
	}
	return o.AlertSuppression, true
}

// HasAlertSuppression returns a boolean if a field has been set.
func (o *ThresholdRule) HasAlertSuppression() bool {
	if o != nil && !IsNil(o.AlertSuppression) {
		return true
	}

	return false
}

// SetAlertSuppression gets a reference to the given ThresholdAlertSuppression and assigns it to the AlertSuppression field.
func (o *ThresholdRule) SetAlertSuppression(v ThresholdAlertSuppression) {
	o.AlertSuppression = &v
}

// GetDataViewId returns the DataViewId field value if set, zero value otherwise.
func (o *ThresholdRule) GetDataViewId() string {
	if o == nil || IsNil(o.DataViewId) {
		var ret string
		return ret
	}
	return *o.DataViewId
}

// GetDataViewIdOk returns a tuple with the DataViewId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetDataViewIdOk() (*string, bool) {
	if o == nil || IsNil(o.DataViewId) {
		return nil, false
	}
	return o.DataViewId, true
}

// HasDataViewId returns a boolean if a field has been set.
func (o *ThresholdRule) HasDataViewId() bool {
	if o != nil && !IsNil(o.DataViewId) {
		return true
	}

	return false
}

// SetDataViewId gets a reference to the given string and assigns it to the DataViewId field.
func (o *ThresholdRule) SetDataViewId(v string) {
	o.DataViewId = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ThresholdRule) GetFilters() []interface{} {
	if o == nil || IsNil(o.Filters) {
		var ret []interface{}
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetFiltersOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ThresholdRule) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []interface{} and assigns it to the Filters field.
func (o *ThresholdRule) SetFilters(v []interface{}) {
	o.Filters = v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *ThresholdRule) GetIndex() []string {
	if o == nil || IsNil(o.Index) {
		var ret []string
		return ret
	}
	return o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetIndexOk() ([]string, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *ThresholdRule) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given []string and assigns it to the Index field.
func (o *ThresholdRule) SetIndex(v []string) {
	o.Index = v
}

// GetSavedId returns the SavedId field value if set, zero value otherwise.
func (o *ThresholdRule) GetSavedId() string {
	if o == nil || IsNil(o.SavedId) {
		var ret string
		return ret
	}
	return *o.SavedId
}

// GetSavedIdOk returns a tuple with the SavedId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetSavedIdOk() (*string, bool) {
	if o == nil || IsNil(o.SavedId) {
		return nil, false
	}
	return o.SavedId, true
}

// HasSavedId returns a boolean if a field has been set.
func (o *ThresholdRule) HasSavedId() bool {
	if o != nil && !IsNil(o.SavedId) {
		return true
	}

	return false
}

// SetSavedId gets a reference to the given string and assigns it to the SavedId field.
func (o *ThresholdRule) SetSavedId(v string) {
	o.SavedId = &v
}

// GetLanguage returns the Language field value
func (o *ThresholdRule) GetLanguage() KqlQueryLanguage {
	if o == nil {
		var ret KqlQueryLanguage
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetLanguageOk() (*KqlQueryLanguage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *ThresholdRule) SetLanguage(v KqlQueryLanguage) {
	o.Language = v
}

// GetActions returns the Actions field value
func (o *ThresholdRule) GetActions() []RuleAction {
	if o == nil {
		var ret []RuleAction
		return ret
	}

	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetActionsOk() ([]RuleAction, bool) {
	if o == nil {
		return nil, false
	}
	return o.Actions, true
}

// SetActions sets field value
func (o *ThresholdRule) SetActions(v []RuleAction) {
	o.Actions = v
}

// GetAliasPurpose returns the AliasPurpose field value if set, zero value otherwise.
func (o *ThresholdRule) GetAliasPurpose() SavedObjectResolveAliasPurpose {
	if o == nil || IsNil(o.AliasPurpose) {
		var ret SavedObjectResolveAliasPurpose
		return ret
	}
	return *o.AliasPurpose
}

// GetAliasPurposeOk returns a tuple with the AliasPurpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetAliasPurposeOk() (*SavedObjectResolveAliasPurpose, bool) {
	if o == nil || IsNil(o.AliasPurpose) {
		return nil, false
	}
	return o.AliasPurpose, true
}

// HasAliasPurpose returns a boolean if a field has been set.
func (o *ThresholdRule) HasAliasPurpose() bool {
	if o != nil && !IsNil(o.AliasPurpose) {
		return true
	}

	return false
}

// SetAliasPurpose gets a reference to the given SavedObjectResolveAliasPurpose and assigns it to the AliasPurpose field.
func (o *ThresholdRule) SetAliasPurpose(v SavedObjectResolveAliasPurpose) {
	o.AliasPurpose = &v
}

// GetAliasTargetId returns the AliasTargetId field value if set, zero value otherwise.
func (o *ThresholdRule) GetAliasTargetId() string {
	if o == nil || IsNil(o.AliasTargetId) {
		var ret string
		return ret
	}
	return *o.AliasTargetId
}

// GetAliasTargetIdOk returns a tuple with the AliasTargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetAliasTargetIdOk() (*string, bool) {
	if o == nil || IsNil(o.AliasTargetId) {
		return nil, false
	}
	return o.AliasTargetId, true
}

// HasAliasTargetId returns a boolean if a field has been set.
func (o *ThresholdRule) HasAliasTargetId() bool {
	if o != nil && !IsNil(o.AliasTargetId) {
		return true
	}

	return false
}

// SetAliasTargetId gets a reference to the given string and assigns it to the AliasTargetId field.
func (o *ThresholdRule) SetAliasTargetId(v string) {
	o.AliasTargetId = &v
}

// GetAuthor returns the Author field value
func (o *ThresholdRule) GetAuthor() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Author
}

// GetAuthorOk returns a tuple with the Author field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetAuthorOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Author, true
}

// SetAuthor sets field value
func (o *ThresholdRule) SetAuthor(v []string) {
	o.Author = v
}

// GetBuildingBlockType returns the BuildingBlockType field value if set, zero value otherwise.
func (o *ThresholdRule) GetBuildingBlockType() string {
	if o == nil || IsNil(o.BuildingBlockType) {
		var ret string
		return ret
	}
	return *o.BuildingBlockType
}

// GetBuildingBlockTypeOk returns a tuple with the BuildingBlockType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetBuildingBlockTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BuildingBlockType) {
		return nil, false
	}
	return o.BuildingBlockType, true
}

// HasBuildingBlockType returns a boolean if a field has been set.
func (o *ThresholdRule) HasBuildingBlockType() bool {
	if o != nil && !IsNil(o.BuildingBlockType) {
		return true
	}

	return false
}

// SetBuildingBlockType gets a reference to the given string and assigns it to the BuildingBlockType field.
func (o *ThresholdRule) SetBuildingBlockType(v string) {
	o.BuildingBlockType = &v
}

// GetDescription returns the Description field value
func (o *ThresholdRule) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ThresholdRule) SetDescription(v string) {
	o.Description = v
}

// GetEnabled returns the Enabled field value
func (o *ThresholdRule) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ThresholdRule) SetEnabled(v bool) {
	o.Enabled = v
}

// GetExceptionsList returns the ExceptionsList field value
func (o *ThresholdRule) GetExceptionsList() []RuleExceptionList {
	if o == nil {
		var ret []RuleExceptionList
		return ret
	}

	return o.ExceptionsList
}

// GetExceptionsListOk returns a tuple with the ExceptionsList field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetExceptionsListOk() ([]RuleExceptionList, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExceptionsList, true
}

// SetExceptionsList sets field value
func (o *ThresholdRule) SetExceptionsList(v []RuleExceptionList) {
	o.ExceptionsList = v
}

// GetFalsePositives returns the FalsePositives field value
func (o *ThresholdRule) GetFalsePositives() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.FalsePositives
}

// GetFalsePositivesOk returns a tuple with the FalsePositives field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetFalsePositivesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FalsePositives, true
}

// SetFalsePositives sets field value
func (o *ThresholdRule) SetFalsePositives(v []string) {
	o.FalsePositives = v
}

// GetFrom returns the From field value
func (o *ThresholdRule) GetFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *ThresholdRule) SetFrom(v string) {
	o.From = v
}

// GetInterval returns the Interval field value
func (o *ThresholdRule) GetInterval() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetIntervalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Interval, true
}

// SetInterval sets field value
func (o *ThresholdRule) SetInterval(v string) {
	o.Interval = v
}

// GetInvestigationFields returns the InvestigationFields field value if set, zero value otherwise.
func (o *ThresholdRule) GetInvestigationFields() InvestigationFields {
	if o == nil || IsNil(o.InvestigationFields) {
		var ret InvestigationFields
		return ret
	}
	return *o.InvestigationFields
}

// GetInvestigationFieldsOk returns a tuple with the InvestigationFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetInvestigationFieldsOk() (*InvestigationFields, bool) {
	if o == nil || IsNil(o.InvestigationFields) {
		return nil, false
	}
	return o.InvestigationFields, true
}

// HasInvestigationFields returns a boolean if a field has been set.
func (o *ThresholdRule) HasInvestigationFields() bool {
	if o != nil && !IsNil(o.InvestigationFields) {
		return true
	}

	return false
}

// SetInvestigationFields gets a reference to the given InvestigationFields and assigns it to the InvestigationFields field.
func (o *ThresholdRule) SetInvestigationFields(v InvestigationFields) {
	o.InvestigationFields = &v
}

// GetLicense returns the License field value if set, zero value otherwise.
func (o *ThresholdRule) GetLicense() string {
	if o == nil || IsNil(o.License) {
		var ret string
		return ret
	}
	return *o.License
}

// GetLicenseOk returns a tuple with the License field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetLicenseOk() (*string, bool) {
	if o == nil || IsNil(o.License) {
		return nil, false
	}
	return o.License, true
}

// HasLicense returns a boolean if a field has been set.
func (o *ThresholdRule) HasLicense() bool {
	if o != nil && !IsNil(o.License) {
		return true
	}

	return false
}

// SetLicense gets a reference to the given string and assigns it to the License field.
func (o *ThresholdRule) SetLicense(v string) {
	o.License = &v
}

// GetMaxSignals returns the MaxSignals field value
func (o *ThresholdRule) GetMaxSignals() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxSignals
}

// GetMaxSignalsOk returns a tuple with the MaxSignals field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetMaxSignalsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxSignals, true
}

// SetMaxSignals sets field value
func (o *ThresholdRule) SetMaxSignals(v int32) {
	o.MaxSignals = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ThresholdRule) GetMeta() map[string]interface{} {
	if o == nil || IsNil(o.Meta) {
		var ret map[string]interface{}
		return ret
	}
	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetMetaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Meta) {
		return map[string]interface{}{}, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ThresholdRule) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given map[string]interface{} and assigns it to the Meta field.
func (o *ThresholdRule) SetMeta(v map[string]interface{}) {
	o.Meta = v
}

// GetName returns the Name field value
func (o *ThresholdRule) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ThresholdRule) SetName(v string) {
	o.Name = v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *ThresholdRule) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *ThresholdRule) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *ThresholdRule) SetNamespace(v string) {
	o.Namespace = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *ThresholdRule) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *ThresholdRule) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *ThresholdRule) SetNote(v string) {
	o.Note = &v
}

// GetOutcome returns the Outcome field value if set, zero value otherwise.
func (o *ThresholdRule) GetOutcome() SavedObjectResolveOutcome {
	if o == nil || IsNil(o.Outcome) {
		var ret SavedObjectResolveOutcome
		return ret
	}
	return *o.Outcome
}

// GetOutcomeOk returns a tuple with the Outcome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetOutcomeOk() (*SavedObjectResolveOutcome, bool) {
	if o == nil || IsNil(o.Outcome) {
		return nil, false
	}
	return o.Outcome, true
}

// HasOutcome returns a boolean if a field has been set.
func (o *ThresholdRule) HasOutcome() bool {
	if o != nil && !IsNil(o.Outcome) {
		return true
	}

	return false
}

// SetOutcome gets a reference to the given SavedObjectResolveOutcome and assigns it to the Outcome field.
func (o *ThresholdRule) SetOutcome(v SavedObjectResolveOutcome) {
	o.Outcome = &v
}

// GetOutputIndex returns the OutputIndex field value if set, zero value otherwise.
// Deprecated
func (o *ThresholdRule) GetOutputIndex() string {
	if o == nil || IsNil(o.OutputIndex) {
		var ret string
		return ret
	}
	return *o.OutputIndex
}

// GetOutputIndexOk returns a tuple with the OutputIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ThresholdRule) GetOutputIndexOk() (*string, bool) {
	if o == nil || IsNil(o.OutputIndex) {
		return nil, false
	}
	return o.OutputIndex, true
}

// HasOutputIndex returns a boolean if a field has been set.
func (o *ThresholdRule) HasOutputIndex() bool {
	if o != nil && !IsNil(o.OutputIndex) {
		return true
	}

	return false
}

// SetOutputIndex gets a reference to the given string and assigns it to the OutputIndex field.
// Deprecated
func (o *ThresholdRule) SetOutputIndex(v string) {
	o.OutputIndex = &v
}

// GetReferences returns the References field value
func (o *ThresholdRule) GetReferences() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.References
}

// GetReferencesOk returns a tuple with the References field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetReferencesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.References, true
}

// SetReferences sets field value
func (o *ThresholdRule) SetReferences(v []string) {
	o.References = v
}

// GetRelatedIntegrations returns the RelatedIntegrations field value
func (o *ThresholdRule) GetRelatedIntegrations() []RelatedIntegration {
	if o == nil {
		var ret []RelatedIntegration
		return ret
	}

	return o.RelatedIntegrations
}

// GetRelatedIntegrationsOk returns a tuple with the RelatedIntegrations field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetRelatedIntegrationsOk() ([]RelatedIntegration, bool) {
	if o == nil {
		return nil, false
	}
	return o.RelatedIntegrations, true
}

// SetRelatedIntegrations sets field value
func (o *ThresholdRule) SetRelatedIntegrations(v []RelatedIntegration) {
	o.RelatedIntegrations = v
}

// GetRiskScore returns the RiskScore field value
func (o *ThresholdRule) GetRiskScore() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RiskScore
}

// GetRiskScoreOk returns a tuple with the RiskScore field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetRiskScoreOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RiskScore, true
}

// SetRiskScore sets field value
func (o *ThresholdRule) SetRiskScore(v int32) {
	o.RiskScore = v
}

// GetRiskScoreMapping returns the RiskScoreMapping field value
func (o *ThresholdRule) GetRiskScoreMapping() []RiskScoreMappingInner {
	if o == nil {
		var ret []RiskScoreMappingInner
		return ret
	}

	return o.RiskScoreMapping
}

// GetRiskScoreMappingOk returns a tuple with the RiskScoreMapping field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetRiskScoreMappingOk() ([]RiskScoreMappingInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.RiskScoreMapping, true
}

// SetRiskScoreMapping sets field value
func (o *ThresholdRule) SetRiskScoreMapping(v []RiskScoreMappingInner) {
	o.RiskScoreMapping = v
}

// GetRuleNameOverride returns the RuleNameOverride field value if set, zero value otherwise.
func (o *ThresholdRule) GetRuleNameOverride() string {
	if o == nil || IsNil(o.RuleNameOverride) {
		var ret string
		return ret
	}
	return *o.RuleNameOverride
}

// GetRuleNameOverrideOk returns a tuple with the RuleNameOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetRuleNameOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.RuleNameOverride) {
		return nil, false
	}
	return o.RuleNameOverride, true
}

// HasRuleNameOverride returns a boolean if a field has been set.
func (o *ThresholdRule) HasRuleNameOverride() bool {
	if o != nil && !IsNil(o.RuleNameOverride) {
		return true
	}

	return false
}

// SetRuleNameOverride gets a reference to the given string and assigns it to the RuleNameOverride field.
func (o *ThresholdRule) SetRuleNameOverride(v string) {
	o.RuleNameOverride = &v
}

// GetSetup returns the Setup field value
func (o *ThresholdRule) GetSetup() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Setup
}

// GetSetupOk returns a tuple with the Setup field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetSetupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Setup, true
}

// SetSetup sets field value
func (o *ThresholdRule) SetSetup(v string) {
	o.Setup = v
}

// GetSeverity returns the Severity field value
func (o *ThresholdRule) GetSeverity() Severity {
	if o == nil {
		var ret Severity
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetSeverityOk() (*Severity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *ThresholdRule) SetSeverity(v Severity) {
	o.Severity = v
}

// GetSeverityMapping returns the SeverityMapping field value
func (o *ThresholdRule) GetSeverityMapping() []SeverityMappingInner {
	if o == nil {
		var ret []SeverityMappingInner
		return ret
	}

	return o.SeverityMapping
}

// GetSeverityMappingOk returns a tuple with the SeverityMapping field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetSeverityMappingOk() ([]SeverityMappingInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeverityMapping, true
}

// SetSeverityMapping sets field value
func (o *ThresholdRule) SetSeverityMapping(v []SeverityMappingInner) {
	o.SeverityMapping = v
}

// GetTags returns the Tags field value
func (o *ThresholdRule) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *ThresholdRule) SetTags(v []string) {
	o.Tags = v
}

// GetThreat returns the Threat field value
func (o *ThresholdRule) GetThreat() []Threat {
	if o == nil {
		var ret []Threat
		return ret
	}

	return o.Threat
}

// GetThreatOk returns a tuple with the Threat field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetThreatOk() ([]Threat, bool) {
	if o == nil {
		return nil, false
	}
	return o.Threat, true
}

// SetThreat sets field value
func (o *ThresholdRule) SetThreat(v []Threat) {
	o.Threat = v
}

// GetThrottle returns the Throttle field value if set, zero value otherwise.
func (o *ThresholdRule) GetThrottle() RuleActionThrottle {
	if o == nil || IsNil(o.Throttle) {
		var ret RuleActionThrottle
		return ret
	}
	return *o.Throttle
}

// GetThrottleOk returns a tuple with the Throttle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetThrottleOk() (*RuleActionThrottle, bool) {
	if o == nil || IsNil(o.Throttle) {
		return nil, false
	}
	return o.Throttle, true
}

// HasThrottle returns a boolean if a field has been set.
func (o *ThresholdRule) HasThrottle() bool {
	if o != nil && !IsNil(o.Throttle) {
		return true
	}

	return false
}

// SetThrottle gets a reference to the given RuleActionThrottle and assigns it to the Throttle field.
func (o *ThresholdRule) SetThrottle(v RuleActionThrottle) {
	o.Throttle = &v
}

// GetTimelineId returns the TimelineId field value if set, zero value otherwise.
func (o *ThresholdRule) GetTimelineId() string {
	if o == nil || IsNil(o.TimelineId) {
		var ret string
		return ret
	}
	return *o.TimelineId
}

// GetTimelineIdOk returns a tuple with the TimelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetTimelineIdOk() (*string, bool) {
	if o == nil || IsNil(o.TimelineId) {
		return nil, false
	}
	return o.TimelineId, true
}

// HasTimelineId returns a boolean if a field has been set.
func (o *ThresholdRule) HasTimelineId() bool {
	if o != nil && !IsNil(o.TimelineId) {
		return true
	}

	return false
}

// SetTimelineId gets a reference to the given string and assigns it to the TimelineId field.
func (o *ThresholdRule) SetTimelineId(v string) {
	o.TimelineId = &v
}

// GetTimelineTitle returns the TimelineTitle field value if set, zero value otherwise.
func (o *ThresholdRule) GetTimelineTitle() string {
	if o == nil || IsNil(o.TimelineTitle) {
		var ret string
		return ret
	}
	return *o.TimelineTitle
}

// GetTimelineTitleOk returns a tuple with the TimelineTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetTimelineTitleOk() (*string, bool) {
	if o == nil || IsNil(o.TimelineTitle) {
		return nil, false
	}
	return o.TimelineTitle, true
}

// HasTimelineTitle returns a boolean if a field has been set.
func (o *ThresholdRule) HasTimelineTitle() bool {
	if o != nil && !IsNil(o.TimelineTitle) {
		return true
	}

	return false
}

// SetTimelineTitle gets a reference to the given string and assigns it to the TimelineTitle field.
func (o *ThresholdRule) SetTimelineTitle(v string) {
	o.TimelineTitle = &v
}

// GetTimestampOverride returns the TimestampOverride field value if set, zero value otherwise.
func (o *ThresholdRule) GetTimestampOverride() string {
	if o == nil || IsNil(o.TimestampOverride) {
		var ret string
		return ret
	}
	return *o.TimestampOverride
}

// GetTimestampOverrideOk returns a tuple with the TimestampOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetTimestampOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.TimestampOverride) {
		return nil, false
	}
	return o.TimestampOverride, true
}

// HasTimestampOverride returns a boolean if a field has been set.
func (o *ThresholdRule) HasTimestampOverride() bool {
	if o != nil && !IsNil(o.TimestampOverride) {
		return true
	}

	return false
}

// SetTimestampOverride gets a reference to the given string and assigns it to the TimestampOverride field.
func (o *ThresholdRule) SetTimestampOverride(v string) {
	o.TimestampOverride = &v
}

// GetTimestampOverrideFallbackDisabled returns the TimestampOverrideFallbackDisabled field value if set, zero value otherwise.
func (o *ThresholdRule) GetTimestampOverrideFallbackDisabled() bool {
	if o == nil || IsNil(o.TimestampOverrideFallbackDisabled) {
		var ret bool
		return ret
	}
	return *o.TimestampOverrideFallbackDisabled
}

// GetTimestampOverrideFallbackDisabledOk returns a tuple with the TimestampOverrideFallbackDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetTimestampOverrideFallbackDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.TimestampOverrideFallbackDisabled) {
		return nil, false
	}
	return o.TimestampOverrideFallbackDisabled, true
}

// HasTimestampOverrideFallbackDisabled returns a boolean if a field has been set.
func (o *ThresholdRule) HasTimestampOverrideFallbackDisabled() bool {
	if o != nil && !IsNil(o.TimestampOverrideFallbackDisabled) {
		return true
	}

	return false
}

// SetTimestampOverrideFallbackDisabled gets a reference to the given bool and assigns it to the TimestampOverrideFallbackDisabled field.
func (o *ThresholdRule) SetTimestampOverrideFallbackDisabled(v bool) {
	o.TimestampOverrideFallbackDisabled = &v
}

// GetTo returns the To field value
func (o *ThresholdRule) GetTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *ThresholdRule) SetTo(v string) {
	o.To = v
}

// GetVersion returns the Version field value
func (o *ThresholdRule) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ThresholdRule) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ThresholdRule) SetVersion(v int32) {
	o.Version = v
}

func (o ThresholdRule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThresholdRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	if !IsNil(o.ExecutionSummary) {
		toSerialize["execution_summary"] = o.ExecutionSummary
	}
	toSerialize["id"] = o.Id
	toSerialize["immutable"] = o.Immutable
	toSerialize["required_fields"] = o.RequiredFields
	toSerialize["revision"] = o.Revision
	toSerialize["rule_id"] = o.RuleId
	if !IsNil(o.RuleSource) {
		toSerialize["rule_source"] = o.RuleSource
	}
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["updated_by"] = o.UpdatedBy
	toSerialize["query"] = o.Query
	toSerialize["threshold"] = o.Threshold
	toSerialize["type"] = o.Type
	if !IsNil(o.AlertSuppression) {
		toSerialize["alert_suppression"] = o.AlertSuppression
	}
	if !IsNil(o.DataViewId) {
		toSerialize["data_view_id"] = o.DataViewId
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.SavedId) {
		toSerialize["saved_id"] = o.SavedId
	}
	toSerialize["language"] = o.Language
	toSerialize["actions"] = o.Actions
	if !IsNil(o.AliasPurpose) {
		toSerialize["alias_purpose"] = o.AliasPurpose
	}
	if !IsNil(o.AliasTargetId) {
		toSerialize["alias_target_id"] = o.AliasTargetId
	}
	toSerialize["author"] = o.Author
	if !IsNil(o.BuildingBlockType) {
		toSerialize["building_block_type"] = o.BuildingBlockType
	}
	toSerialize["description"] = o.Description
	toSerialize["enabled"] = o.Enabled
	toSerialize["exceptions_list"] = o.ExceptionsList
	toSerialize["false_positives"] = o.FalsePositives
	toSerialize["from"] = o.From
	toSerialize["interval"] = o.Interval
	if !IsNil(o.InvestigationFields) {
		toSerialize["investigation_fields"] = o.InvestigationFields
	}
	if !IsNil(o.License) {
		toSerialize["license"] = o.License
	}
	toSerialize["max_signals"] = o.MaxSignals
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.Outcome) {
		toSerialize["outcome"] = o.Outcome
	}
	if !IsNil(o.OutputIndex) {
		toSerialize["output_index"] = o.OutputIndex
	}
	toSerialize["references"] = o.References
	toSerialize["related_integrations"] = o.RelatedIntegrations
	toSerialize["risk_score"] = o.RiskScore
	toSerialize["risk_score_mapping"] = o.RiskScoreMapping
	if !IsNil(o.RuleNameOverride) {
		toSerialize["rule_name_override"] = o.RuleNameOverride
	}
	toSerialize["setup"] = o.Setup
	toSerialize["severity"] = o.Severity
	toSerialize["severity_mapping"] = o.SeverityMapping
	toSerialize["tags"] = o.Tags
	toSerialize["threat"] = o.Threat
	if !IsNil(o.Throttle) {
		toSerialize["throttle"] = o.Throttle
	}
	if !IsNil(o.TimelineId) {
		toSerialize["timeline_id"] = o.TimelineId
	}
	if !IsNil(o.TimelineTitle) {
		toSerialize["timeline_title"] = o.TimelineTitle
	}
	if !IsNil(o.TimestampOverride) {
		toSerialize["timestamp_override"] = o.TimestampOverride
	}
	if !IsNil(o.TimestampOverrideFallbackDisabled) {
		toSerialize["timestamp_override_fallback_disabled"] = o.TimestampOverrideFallbackDisabled
	}
	toSerialize["to"] = o.To
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

type NullableThresholdRule struct {
	value *ThresholdRule
	isSet bool
}

func (v NullableThresholdRule) Get() *ThresholdRule {
	return v.value
}

func (v *NullableThresholdRule) Set(val *ThresholdRule) {
	v.value = val
	v.isSet = true
}

func (v NullableThresholdRule) IsSet() bool {
	return v.isSet
}

func (v *NullableThresholdRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThresholdRule(val *ThresholdRule) *NullableThresholdRule {
	return &NullableThresholdRule{value: val, isSet: true}
}

func (v NullableThresholdRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThresholdRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
