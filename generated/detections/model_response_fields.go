/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
	"time"
)

// checks if the ResponseFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseFields{}

// ResponseFields struct for ResponseFields
type ResponseFields struct {
	CreatedAt        time.Time             `json:"created_at"`
	CreatedBy        string                `json:"created_by"`
	ExecutionSummary *RuleExecutionSummary `json:"execution_summary,omitempty"`
	// A universally unique identifier
	Id string `json:"id"`
	// This field determines whether the rule is a prebuilt Elastic rule. It will be replaced with the `rule_source` field.
	// Deprecated
	Immutable      bool            `json:"immutable"`
	RequiredFields []RequiredField `json:"required_fields"`
	Revision       int32           `json:"revision"`
	// Could be any string, not necessarily a UUID
	RuleId     string      `json:"rule_id"`
	RuleSource *RuleSource `json:"rule_source,omitempty"`
	UpdatedAt  time.Time   `json:"updated_at"`
	UpdatedBy  string      `json:"updated_by"`
}

// NewResponseFields instantiates a new ResponseFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseFields(createdAt time.Time, createdBy string, id string, immutable bool, requiredFields []RequiredField, revision int32, ruleId string, updatedAt time.Time, updatedBy string) *ResponseFields {
	this := ResponseFields{}
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Id = id
	this.Immutable = immutable
	this.RequiredFields = requiredFields
	this.Revision = revision
	this.RuleId = ruleId
	this.UpdatedAt = updatedAt
	this.UpdatedBy = updatedBy
	return &this
}

// NewResponseFieldsWithDefaults instantiates a new ResponseFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseFieldsWithDefaults() *ResponseFields {
	this := ResponseFields{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *ResponseFields) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ResponseFields) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ResponseFields) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *ResponseFields) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *ResponseFields) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *ResponseFields) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetExecutionSummary returns the ExecutionSummary field value if set, zero value otherwise.
func (o *ResponseFields) GetExecutionSummary() RuleExecutionSummary {
	if o == nil || IsNil(o.ExecutionSummary) {
		var ret RuleExecutionSummary
		return ret
	}
	return *o.ExecutionSummary
}

// GetExecutionSummaryOk returns a tuple with the ExecutionSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseFields) GetExecutionSummaryOk() (*RuleExecutionSummary, bool) {
	if o == nil || IsNil(o.ExecutionSummary) {
		return nil, false
	}
	return o.ExecutionSummary, true
}

// HasExecutionSummary returns a boolean if a field has been set.
func (o *ResponseFields) HasExecutionSummary() bool {
	if o != nil && !IsNil(o.ExecutionSummary) {
		return true
	}

	return false
}

// SetExecutionSummary gets a reference to the given RuleExecutionSummary and assigns it to the ExecutionSummary field.
func (o *ResponseFields) SetExecutionSummary(v RuleExecutionSummary) {
	o.ExecutionSummary = &v
}

// GetId returns the Id field value
func (o *ResponseFields) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ResponseFields) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ResponseFields) SetId(v string) {
	o.Id = v
}

// GetImmutable returns the Immutable field value
// Deprecated
func (o *ResponseFields) GetImmutable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Immutable
}

// GetImmutableOk returns a tuple with the Immutable field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *ResponseFields) GetImmutableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Immutable, true
}

// SetImmutable sets field value
// Deprecated
func (o *ResponseFields) SetImmutable(v bool) {
	o.Immutable = v
}

// GetRequiredFields returns the RequiredFields field value
func (o *ResponseFields) GetRequiredFields() []RequiredField {
	if o == nil {
		var ret []RequiredField
		return ret
	}

	return o.RequiredFields
}

// GetRequiredFieldsOk returns a tuple with the RequiredFields field value
// and a boolean to check if the value has been set.
func (o *ResponseFields) GetRequiredFieldsOk() ([]RequiredField, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequiredFields, true
}

// SetRequiredFields sets field value
func (o *ResponseFields) SetRequiredFields(v []RequiredField) {
	o.RequiredFields = v
}

// GetRevision returns the Revision field value
func (o *ResponseFields) GetRevision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *ResponseFields) GetRevisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *ResponseFields) SetRevision(v int32) {
	o.Revision = v
}

// GetRuleId returns the RuleId field value
func (o *ResponseFields) GetRuleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value
// and a boolean to check if the value has been set.
func (o *ResponseFields) GetRuleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleId, true
}

// SetRuleId sets field value
func (o *ResponseFields) SetRuleId(v string) {
	o.RuleId = v
}

// GetRuleSource returns the RuleSource field value if set, zero value otherwise.
func (o *ResponseFields) GetRuleSource() RuleSource {
	if o == nil || IsNil(o.RuleSource) {
		var ret RuleSource
		return ret
	}
	return *o.RuleSource
}

// GetRuleSourceOk returns a tuple with the RuleSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseFields) GetRuleSourceOk() (*RuleSource, bool) {
	if o == nil || IsNil(o.RuleSource) {
		return nil, false
	}
	return o.RuleSource, true
}

// HasRuleSource returns a boolean if a field has been set.
func (o *ResponseFields) HasRuleSource() bool {
	if o != nil && !IsNil(o.RuleSource) {
		return true
	}

	return false
}

// SetRuleSource gets a reference to the given RuleSource and assigns it to the RuleSource field.
func (o *ResponseFields) SetRuleSource(v RuleSource) {
	o.RuleSource = &v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ResponseFields) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ResponseFields) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ResponseFields) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetUpdatedBy returns the UpdatedBy field value
func (o *ResponseFields) GetUpdatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value
// and a boolean to check if the value has been set.
func (o *ResponseFields) GetUpdatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedBy, true
}

// SetUpdatedBy sets field value
func (o *ResponseFields) SetUpdatedBy(v string) {
	o.UpdatedBy = v
}

func (o ResponseFields) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	if !IsNil(o.ExecutionSummary) {
		toSerialize["execution_summary"] = o.ExecutionSummary
	}
	toSerialize["id"] = o.Id
	toSerialize["immutable"] = o.Immutable
	toSerialize["required_fields"] = o.RequiredFields
	toSerialize["revision"] = o.Revision
	toSerialize["rule_id"] = o.RuleId
	if !IsNil(o.RuleSource) {
		toSerialize["rule_source"] = o.RuleSource
	}
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["updated_by"] = o.UpdatedBy
	return toSerialize, nil
}

type NullableResponseFields struct {
	value *ResponseFields
	isSet bool
}

func (v NullableResponseFields) Get() *ResponseFields {
	return v.value
}

func (v *NullableResponseFields) Set(val *ResponseFields) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseFields) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseFields(val *ResponseFields) *NullableResponseFields {
	return &NullableResponseFields{value: val, isSet: true}
}

func (v NullableResponseFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
