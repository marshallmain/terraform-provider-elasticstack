/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the BulkActionSkipResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkActionSkipResult{}

// BulkActionSkipResult struct for BulkActionSkipResult
type BulkActionSkipResult struct {
	Id         string             `json:"id"`
	Name       *string            `json:"name,omitempty"`
	SkipReason BulkEditSkipReason `json:"skip_reason"`
}

// NewBulkActionSkipResult instantiates a new BulkActionSkipResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkActionSkipResult(id string, skipReason BulkEditSkipReason) *BulkActionSkipResult {
	this := BulkActionSkipResult{}
	this.Id = id
	this.SkipReason = skipReason
	return &this
}

// NewBulkActionSkipResultWithDefaults instantiates a new BulkActionSkipResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkActionSkipResultWithDefaults() *BulkActionSkipResult {
	this := BulkActionSkipResult{}
	return &this
}

// GetId returns the Id field value
func (o *BulkActionSkipResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BulkActionSkipResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BulkActionSkipResult) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BulkActionSkipResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkActionSkipResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BulkActionSkipResult) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BulkActionSkipResult) SetName(v string) {
	o.Name = &v
}

// GetSkipReason returns the SkipReason field value
func (o *BulkActionSkipResult) GetSkipReason() BulkEditSkipReason {
	if o == nil {
		var ret BulkEditSkipReason
		return ret
	}

	return o.SkipReason
}

// GetSkipReasonOk returns a tuple with the SkipReason field value
// and a boolean to check if the value has been set.
func (o *BulkActionSkipResult) GetSkipReasonOk() (*BulkEditSkipReason, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SkipReason, true
}

// SetSkipReason sets field value
func (o *BulkActionSkipResult) SetSkipReason(v BulkEditSkipReason) {
	o.SkipReason = v
}

func (o BulkActionSkipResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkActionSkipResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["skip_reason"] = o.SkipReason
	return toSerialize, nil
}

type NullableBulkActionSkipResult struct {
	value *BulkActionSkipResult
	isSet bool
}

func (v NullableBulkActionSkipResult) Get() *BulkActionSkipResult {
	return v.value
}

func (v *NullableBulkActionSkipResult) Set(val *BulkActionSkipResult) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkActionSkipResult) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkActionSkipResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkActionSkipResult(val *BulkActionSkipResult) *NullableBulkActionSkipResult {
	return &NullableBulkActionSkipResult{value: val, isSet: true}
}

func (v NullableBulkActionSkipResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkActionSkipResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
