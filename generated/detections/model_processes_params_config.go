/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the ProcessesParamsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessesParamsConfig{}

// ProcessesParamsConfig struct for ProcessesParamsConfig
type ProcessesParamsConfig struct {
	// Field to use instead of process.pid
	Field string `json:"field"`
	// Whether to overwrite field with process.pid
	Overwrite *bool `json:"overwrite,omitempty"`
}

// NewProcessesParamsConfig instantiates a new ProcessesParamsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessesParamsConfig(field string) *ProcessesParamsConfig {
	this := ProcessesParamsConfig{}
	this.Field = field
	var overwrite bool = true
	this.Overwrite = &overwrite
	return &this
}

// NewProcessesParamsConfigWithDefaults instantiates a new ProcessesParamsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessesParamsConfigWithDefaults() *ProcessesParamsConfig {
	this := ProcessesParamsConfig{}
	var overwrite bool = true
	this.Overwrite = &overwrite
	return &this
}

// GetField returns the Field field value
func (o *ProcessesParamsConfig) GetField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *ProcessesParamsConfig) GetFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *ProcessesParamsConfig) SetField(v string) {
	o.Field = v
}

// GetOverwrite returns the Overwrite field value if set, zero value otherwise.
func (o *ProcessesParamsConfig) GetOverwrite() bool {
	if o == nil || IsNil(o.Overwrite) {
		var ret bool
		return ret
	}
	return *o.Overwrite
}

// GetOverwriteOk returns a tuple with the Overwrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessesParamsConfig) GetOverwriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Overwrite) {
		return nil, false
	}
	return o.Overwrite, true
}

// HasOverwrite returns a boolean if a field has been set.
func (o *ProcessesParamsConfig) HasOverwrite() bool {
	if o != nil && !IsNil(o.Overwrite) {
		return true
	}

	return false
}

// SetOverwrite gets a reference to the given bool and assigns it to the Overwrite field.
func (o *ProcessesParamsConfig) SetOverwrite(v bool) {
	o.Overwrite = &v
}

func (o ProcessesParamsConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessesParamsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["field"] = o.Field
	if !IsNil(o.Overwrite) {
		toSerialize["overwrite"] = o.Overwrite
	}
	return toSerialize, nil
}

type NullableProcessesParamsConfig struct {
	value *ProcessesParamsConfig
	isSet bool
}

func (v NullableProcessesParamsConfig) Get() *ProcessesParamsConfig {
	return v.value
}

func (v *NullableProcessesParamsConfig) Set(val *ProcessesParamsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessesParamsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessesParamsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessesParamsConfig(val *ProcessesParamsConfig) *NullableProcessesParamsConfig {
	return &NullableProcessesParamsConfig{value: val, isSet: true}
}

func (v NullableProcessesParamsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessesParamsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
