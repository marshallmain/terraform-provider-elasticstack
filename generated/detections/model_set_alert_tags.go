/*
Security Detections (Elastic Cloud and self-hosted)

You can create rules that automatically turn events and external alerts sent to Elastic Security into detection alerts. These alerts are displayed on the Detections page.

API version: 2023-10-31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package detections

import (
	"encoding/json"
)

// checks if the SetAlertTags type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetAlertTags{}

// SetAlertTags struct for SetAlertTags
type SetAlertTags struct {
	TagsToAdd    []string `json:"tags_to_add"`
	TagsToRemove []string `json:"tags_to_remove"`
}

// NewSetAlertTags instantiates a new SetAlertTags object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetAlertTags(tagsToAdd []string, tagsToRemove []string) *SetAlertTags {
	this := SetAlertTags{}
	this.TagsToAdd = tagsToAdd
	this.TagsToRemove = tagsToRemove
	return &this
}

// NewSetAlertTagsWithDefaults instantiates a new SetAlertTags object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetAlertTagsWithDefaults() *SetAlertTags {
	this := SetAlertTags{}
	return &this
}

// GetTagsToAdd returns the TagsToAdd field value
func (o *SetAlertTags) GetTagsToAdd() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TagsToAdd
}

// GetTagsToAddOk returns a tuple with the TagsToAdd field value
// and a boolean to check if the value has been set.
func (o *SetAlertTags) GetTagsToAddOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TagsToAdd, true
}

// SetTagsToAdd sets field value
func (o *SetAlertTags) SetTagsToAdd(v []string) {
	o.TagsToAdd = v
}

// GetTagsToRemove returns the TagsToRemove field value
func (o *SetAlertTags) GetTagsToRemove() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TagsToRemove
}

// GetTagsToRemoveOk returns a tuple with the TagsToRemove field value
// and a boolean to check if the value has been set.
func (o *SetAlertTags) GetTagsToRemoveOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TagsToRemove, true
}

// SetTagsToRemove sets field value
func (o *SetAlertTags) SetTagsToRemove(v []string) {
	o.TagsToRemove = v
}

func (o SetAlertTags) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetAlertTags) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tags_to_add"] = o.TagsToAdd
	toSerialize["tags_to_remove"] = o.TagsToRemove
	return toSerialize, nil
}

type NullableSetAlertTags struct {
	value *SetAlertTags
	isSet bool
}

func (v NullableSetAlertTags) Get() *SetAlertTags {
	return v.value
}

func (v *NullableSetAlertTags) Set(val *SetAlertTags) {
	v.value = val
	v.isSet = true
}

func (v NullableSetAlertTags) IsSet() bool {
	return v.isSet
}

func (v *NullableSetAlertTags) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetAlertTags(val *SetAlertTags) *NullableSetAlertTags {
	return &NullableSetAlertTags{value: val, isSet: true}
}

func (v NullableSetAlertTags) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetAlertTags) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
